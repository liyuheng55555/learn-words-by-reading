import{e as Z,f as ct}from"./chunks/http.js";let S=[];const V=new Map,dt=new Map,L=new Map;let N="";const M=document.getElementById("list"),xt=document.getElementById("filter"),ut=document.getElementById("edit-mode-btn"),gt=document.getElementById("view-mode-btn"),At=document.getElementById("edit-section"),bt=document.getElementById("view-section"),R=document.getElementById("article-editor"),Nt=document.getElementById("save-article-btn"),B=document.getElementById("editor-status"),rt=document.getElementById("article-content"),st=document.getElementById("generator-words"),x=document.getElementById("generate-article-btn"),Q=document.getElementById("generator-status"),f=document.getElementById("start-grade"),y=document.getElementById("sync-server"),k=document.getElementById("sync-status"),tt=document.getElementById("server-scores"),F=document.getElementById("score-api-url"),Et=document.getElementById("api-url"),vt=document.getElementById("api-key"),St=document.getElementById("ai-model"),Rt=document.getElementById("practiced-count"),Pt=document.getElementById("total-count"),Gt=document.getElementById("mastery-threshold"),T=document.getElementById("auto-fill-words"),P=new Map;y&&!y.dataset.originalText&&(y.dataset.originalText=y.textContent);W([]);h("","info");Tt({quiet:!0});const Ot=220,H=.85,et=.6;let q={};function G(e){return"term-"+e.toLowerCase().replace(/[^a-z0-9]+/g,"-")}function $t(e,t){const n=typeof e=="string"?e.trim():"";if(!n)return;const o=typeof t=="string"&&t.trim()?t.trim():n;V.set(o.toLowerCase(),n),V.set(n.toLowerCase(),n),dt.set(n,o)}function jt(e=[]){if(V.clear(),dt.clear(),!!Array.isArray(e))for(const t of e)!t||typeof t!="object"||$t(t.original,t.used)}function mt(e){if(!e)return null;const t=e.trim().toLowerCase();return V.has(t)?V.get(t):S.find(o=>o.toLowerCase()===t)||null}function _t(e){if(!e)return null;const t=e.trim();return dt.get(t)||t}function at(e){const t=_t(e)||e,n="t-"+t.toLowerCase().replace(/[^a-z0-9]+/g,"-"),o=document.getElementById(n);if(o){o.scrollIntoView({behavior:"smooth",block:"center"}),ht(o);return}const r=document.querySelectorAll("#article-content strong"),s=t.toLowerCase();for(const i of r){const a=i.textContent.trim().toLowerCase();if(a===s||a.includes(s)){i.scrollIntoView({behavior:"smooth",block:"center"}),ht(i);return}}alert("在文章中未找到该词："+e)}function ht(e){e.style.outline="2px solid var(--accent-2)",e.style.boxShadow="0 0 0 4px rgba(137,220,235,.25)",setTimeout(()=>{e.style.outline="",e.style.boxShadow=""},1500)}function Ft(e){if(!e)return[];const t=e.split(/[\n,，、；;]+/),n=new Set,o=[];for(const r of t){const s=r.trim();s&&!n.has(s)&&(n.add(s),o.push(s))}return o}function Vt(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function K(e){if(!e)return"";const{content:t,text:n,tool_calls:o}=e,r=a=>a?typeof a=="string"?a:typeof a=="number"||typeof a=="boolean"?String(a):typeof a=="object"?typeof a.text=="string"?a.text:Array.isArray(a.text)?a.text.map(r).join(""):a.type==="text"&&typeof a.value=="string"?a.value:a.type==="text"&&typeof a.data=="string"?a.data:(a.type==="tool_call"&&a.function?.arguments,""):"":"";let s=[];if(typeof t=="string"?s.push(t):Array.isArray(t)?s.push(t.map(r).join("")):t&&typeof t=="object"&&(typeof t.text=="string"?s.push(t.text):Array.isArray(t.text)&&s.push(t.text.map(r).join(""))),typeof n=="string"?s.push(n):Array.isArray(n)&&s.push(n.map(r).join("")),(!s.length||s.join("").trim()==="")&&Array.isArray(o))for(const a of o)a?.function?.result&&typeof a.function.result=="string"&&s.push(a.function.result);return s.join(`
`).trim()}function Jt(e){const t=Vt(e.trim());return t?/\s/.test(e)?new RegExp(t.replace(/\s+/g,"\\s+"),"i"):new RegExp(`\\b${t}\\b`,"i"):null}function z(e,t,{trim:n=!0}={}){if(!e)return;const o=()=>{const r=n?e.value.trim():e.value;r?localStorage.setItem(t,r):localStorage.removeItem(t)};e.addEventListener("change",o),e.addEventListener("blur",o)}function Ht(e,t,n=[]){const o=e.replace(/\*\*/g,""),r=new Set,s=/\*\*(.*?)\*\*/g;let i;for(;(i=s.exec(e))!==null;){const l=i[1]?.trim().toLowerCase();l&&r.add(l)}const a=new Map;if(Array.isArray(n))for(const l of n){if(!l||typeof l!="object")continue;const c=typeof l.original=="string"?l.original.trim().toLowerCase():"",d=typeof l.used=="string"?l.used.trim().toLowerCase():"";c&&d&&a.set(c,d),c&&!d&&a.set(c,c)}const u=[];for(const l of t){const c=typeof l=="string"?l.trim().toLowerCase():"";if(!c||r.has(c))continue;const d=a.get(c);if(d&&r.has(d))continue;const g=Jt(l);g&&(g.test(o)||u.push(l))}return u}function p(e,t="info"){if(!Q)return;const n={info:"var(--muted)",ok:"var(--ok)",warn:"var(--warn)"};Q.textContent=e||"",Q.style.color=n[t]||n.info}z(Et,"ai-api-url");z(vt,"ai-api-key");z(St,"ai-model");z(F,"score-api-url");function j(e,t){f&&(typeof e=="string"&&(f.textContent=e),f.disabled=t)}function Ut(){f&&(f.disabled=!1,f.textContent=f.dataset.originalText||"📝 开始判题")}function h(e,t="info"){k&&(k.classList.remove("ok","warn"),t==="ok"&&k.classList.add("ok"),t==="warn"&&k.classList.add("warn"),t!=="ok"&&t!=="warn"&&k.classList.remove("ok","warn"),k.textContent=e||"")}function W(e){if(!tt)return;if(P.clear(),!e||!e.length){tt.innerHTML='<div class="empty">服务器暂无词汇记录。</div>',it();return}const t=e.map(({term:n,score:o,submissions:r,last_submission:s})=>{const i=Z(n),a=Number(o),u=Number.isFinite(a)?a.toFixed(2):"0.00",l=Number.isFinite(Number(r))?Number(r):0;typeof n=="string"&&P.set(n.trim(),Number.isFinite(a)?a:null);let c="-";if(s){const d=new Date(s);c=Number.isNaN(d.getTime())?Z(s):d.toLocaleString()}return`<tr><td>${i}</td><td>${u}</td><td>${l}</td><td>${Z(c)}</td></tr>`}).join("");tt.innerHTML=`
    <h5>服务器词表得分</h5>
    <table>
      <thead><tr><th>词汇</th><th>累计分数</th><th>提交次数</th><th>最后提交时间</th></tr></thead>
      <tbody>${t}</tbody>
    </table>
  `,it()}function Y(){const e=F?.value?.trim();if(e)return e;const t=localStorage.getItem("score-api-url");return t||"http://localhost:4000"}function qt(){const e=[];if(!q)return e;for(const[t,n]of Object.entries(q))if(n&&typeof n.similarity=="number"){const o=L.get(t)||"";e.push({term:t,similarity:n.similarity,context:o||null,standard_answer:n.standardAnswer?String(n.standardAnswer):null,explanation:n.explanation?String(n.explanation):null})}return e}function Dt(){return typeof N=="string"&&N.trim()?N.trim():typeof R?.value=="string"?R.value.trim():""}function Kt(){const e=Number(Rt?.value??0),t=Number(Pt?.value??0),n=Number(Gt?.value??1),o=Number.isFinite(e)?Math.max(0,Math.min(50,Math.round(e))):0,r=Number.isFinite(t)?Math.max(0,Math.min(50,Math.round(t))):0,s=Number.isFinite(n)?n:1;return{practiced:o,total:r,masteryThreshold:s}}async function Tt({quiet:e=!1}={}){try{const n=Y().replace(/\/$/,"")+"/api/word-scores",o=await ct(n);Array.isArray(o?.scores)?(W(o.scores),e||h(`已获取服务器记录（${o.scores.length} 个词）`,"ok")):e||h("服务器未返回有效数据","warn")}catch(t){e||h(`无法获取服务器分数：${t.message}`,"warn")}}async function zt(){if(!T)return;const{practiced:e,total:t,masteryThreshold:n}=Kt();if(!t){p("请设置总词数（至少 1）","warn");return}if(e>t){p("练习过的词数不能超过总词数","warn");return}const o=Y(),r=`${o.replace(/\/$/,"")}/api/word-suggestions?practiced=${e}&total=${t}&threshold=${encodeURIComponent(n)}`;T.disabled=!0,T.textContent="获取中…",p("正在向服务器请求推荐词汇…","info");try{const s=await ct(r),i=Array.isArray(s?.practiced)?s.practiced.map(l=>l.term).filter(Boolean):[],a=Array.isArray(s?.fresh)?s.fresh.map(l=>l.term).filter(Boolean):[];if(!i.length&&!a.length){p("未获取到符合条件的词汇，请调整参数。","warn");return}const u=[];i.length&&u.push(i.join(", ")),a.length&&u.push(a.join(", ")),st.value=u.join(`

`),p(`已填入 ${i.length} 个练习词与 ${a.length} 个新词`,"ok"),localStorage.setItem("score-api-url",o)}catch(s){console.error("[Auto Fill Words] 获取失败:",s),p(`获取推荐词汇失败：${s.message}`,"warn")}finally{T.disabled=!1,T.textContent="🎯 自动取词"}}function ft(){const e=Et?.value?.trim(),t=vt?.value?.trim(),n=St?.value?.trim(),o=localStorage.getItem("ai-api-url"),r=localStorage.getItem("ai-api-key"),s=localStorage.getItem("ai-model"),i=(e||o||"").trim(),a=(t||r||"").trim(),u=(n||s||"gpt-3.5-turbo").trim()||"gpt-3.5-turbo";return e!==void 0&&(e?localStorage.setItem("ai-api-url",e):localStorage.removeItem("ai-api-url")),t!==void 0&&(t?localStorage.setItem("ai-api-key",t):localStorage.removeItem("ai-api-key")),n!==void 0&&(n?localStorage.setItem("ai-model",n):localStorage.removeItem("ai-model")),{apiUrl:i,apiKey:a,model:u}}function Wt(e){const t=[...e];for(let n=t.length-1;n>0;n--){const o=Math.floor(Math.random()*(n+1));[t[n],t[o]]=[t[o],t[n]]}return t}function Yt(e){return`请为英语学习者写一篇英文短文，使用 Markdown 段落格式（可自行分段，但不要添加标题、前言或代码块）。严格遵守下列规则：

**A. 标注与频次**

* 仅对目标词加粗，形式为 **word**；除目标词外不得使用粗体。
* 每个目标词至少出现一次；可按语境变化词形，并对变化后的词形加粗。
* **每句最多出现一个目标词**；禁止在同一句用并列（如 “X and Y” 或 “X, Y, and Z”）放入多个目标词。

**B. 语义分散与防“扎堆”**

* **同义、近义、反义、同词根或同一语义场的目标词，彼此之间至少间隔 ≥2 句**；不得出现在相邻句或同一句。
* 若两词常作并列形容或可互换使用，只在不同句中出现，且置于不同话题或功能（如一个作描述，另一个用于行动或结果）。

**C. 连贯性与结构（重点）**

* 先在内部拟定“三段式叙事”但**不输出大纲**：
  1）开端：交代时间、地点、人物与目标；
  2）发展：行动、阻碍与抉择；
  3）结尾：结果或反思，呼应目标。
* 全文保持**同一组人物/地点/目标**贯穿；不要无提示地更换场景或人物。
* **句际逻辑**清晰：每句与上一句构成时间顺序、因果、递进或转折关系。必要时在句首使用 then, later, because, however, therefore, eventually 等连接词（适量使用）。
* 禁止清单式、口号式或与主线无关的跳转；避免模板化重复句式。

**D. 语境暗示，禁止定义式写法**

* 禁止 “**X** is/means/refers to/also called/defined as …” 等定义句；禁止在目标词所在句用括号、破折号、同位语或 “i.e./such as/for example” 给出直白解释或同义替换。
* 不给出中文释义或直译提示词；通过动作、结果、感受、对话或情境**间接**表达含义。

**E. 篇幅与段落**

* 句子数应 ≥ 目标词数量，优先采用“一词一句”。

**F. 输出**

* **仅输出文章正文**，保留 Markdown 段落与粗体标记；不要添加任何额外说明、标题、列表或 JSON。

目标词汇（顺序随机）：

${e.map((n,o)=>`${o+1}. ${n}`).join(`
`)}`}function Xt(e,t){const n=t.map((o,r)=>`${r+1}. ${o}`).join(`
`);return`请阅读下方的英文文章，并根据提供的目标词汇列表，指出文章中每个词汇的实际写法。

输出一个 JSON 对象，格式如下：
{
  "pairs": [
    {"original": "目标词汇", "used": "文章中的实际写法（去掉**，若未出现则留空字符串）"}
  ]
}

要求：
- original 必须与提供的目标词汇完全一致；
- used 为文章中出现的具体形式（保留大小写/单复数等变化，但去掉任何 Markdown ** 标记）；
- 如果某个词未在文章中出现，将 used 设为空字符串。

英文文章：
"""
${e}
"""

目标词汇列表：
${n}`}function nt(e){return typeof e!="string"?"":e.replace(/\*\*/g,"").trim()}function Zt(e,t){const n=(t||[]).map(l=>({original:l,used:l}));if(!e)return n;let o=e.trim();if(!o)return n;let r=null;const s=o.match(/```(?:json)?([\s\S]*?)```/i);if(s)r=s[1].trim();else{const l=o.match(/\{[\s\S]*\}/);l&&(r=l[0])}let i=[];if(r)try{const l=JSON.parse(r);i=(Array.isArray(l?.pairs)?l.pairs:Array.isArray(l)?l:[]).map(d=>{if(!d||typeof d!="object")return null;const g=typeof d.original=="string"?d.original.trim():"",m=nt(d.used??"");return g?{original:g,used:m||""}:null}).filter(Boolean)}catch(l){console.warn("[Variant Mapping] JSON解析失败，尝试解析纯文本格式",l),i=[]}if(!i.length){const l=o.split(/\n+/).map(c=>c.trim()).filter(Boolean);for(const c of l){const d=c.match(/^(.+?)\s*(?:=>|->|：|:|=)\s*(.+)$/);if(!d)continue;const g=d[1].trim(),m=nt(d[2]);g&&i.push({original:g,used:m})}}const a=new Map;for(const l of i){const c=typeof l.original=="string"?l.original.trim():"";if(!c)continue;const d=c.toLowerCase(),g=nt(l.used||c);a.has(d)||a.set(d,{original:c,used:g||c})}const u=[];for(const l of t||[]){const c=l.trim().toLowerCase(),d=a.get(c),g=d?d.used:l;u.push({original:l,used:g})}return u}async function Qt(e,t,n,o,r){const s=Xt(o,r),i={model:n,messages:[{role:"system",content:"You are an assistant that extracts vocabulary mappings and responds with concise JSON."},{role:"user",content:s}],temperature:0,max_tokens:3e3};console.log("[Variant Mapping] 请求体:",JSON.stringify(i,null,2));const a=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(i)});if(console.log("[Variant Mapping] 响应状态:",a.status,a.statusText),!a.ok){const d=await a.text();throw console.error("[Variant Mapping] API错误响应:",d),new Error(`词形映射请求失败: ${a.status} ${a.statusText}: ${d}`)}const u=await a.json();console.log("[Variant Mapping] API响应:",u);const l=u?.choices?.[0]?.message;if(!l)throw new Error("词形映射响应格式异常");const c=K(l);return console.log("[Variant Mapping] AI回复:",c),Zt(c,r)}async function te(){if(!x)return;const e=Ft(st?.value||"");if(!e.length){p("请至少输入一个目标词汇","warn"),st?.focus();return}const{apiUrl:t,apiKey:n,model:o}=ft();if(!t||!n){p("请先在右侧配置AI API地址与Key","warn");return}const r=x.dataset.originalText||x.textContent;try{x.disabled=!0,x.dataset.originalText=r,x.textContent="生成中…",p("正在请求AI生成文章…","info");const s=Wt(e),i=Yt(s),a={model:o,messages:[{role:"system",content:"You are an expert science writer who produces fluent, engaging English articles in Markdown without extra commentary."},{role:"user",content:i}],temperature:.65,top_p:.9,max_tokens:Math.min(1200,Math.round(Ot*4.2))};console.log("[Article Generator] 请求体:",JSON.stringify(a,null,2));const u=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(a)});if(!u.ok){const v=await u.text();throw new Error(`API请求失败: ${u.status} ${u.statusText} | ${v}`)}const l=await u.json();console.log("[Article Generator] API响应:",l);const c=l?.choices?.[0]?.message;if(!c)throw new Error("AI未返回文章内容");const d=K(c);if(!d)throw new Error("AI未返回文章内容");R.value=d.trim();let g,m=!1;try{if(p("文章生成成功，正在分析词形映射…","info"),g=await Qt(t,n,o,d,e),!Array.isArray(g)||!g.length)throw new Error("未获得有效的词形映射")}catch(v){console.error("[Article Generator] 词形映射失败:",v),g=e.map(b=>({original:b,used:b})),p("文章生成完成，但词形映射失败，已使用原始词汇。","warn"),w("词形映射失败，已使用原始词汇","warn"),m=!0}console.log("[Article Generator] 最终词形映射:",g),pt(d,g),X();const A=Ht(d,e,g);if(A.length){const v=`⚠️ 已生成文章，但缺少 ${A.length} 个词：${A.join("，")}`;p(v,"warn"),w("生成完成，但存在缺失词汇，请手动补充。","warn")}else m||(p("AI文章生成完成，词汇与词形均已覆盖 ✓","ok"),w("文章生成成功并包含全部目标词汇！","ok"));await Tt({quiet:!0})}catch(s){console.error("[Article Generator] 生成文章失败:",s),p(`生成失败：${s.message}`,"warn")}finally{x.disabled=!1,x.textContent=x.dataset.originalText||"✨ AI生成文章"}}function pt(e,t=[]){try{N=typeof e=="string"?e:"",jt(t);const n=ee(e);rt.innerHTML=n,ne(e),oe(),yt(),B.textContent="文章保存成功！",B.style.color="var(--ok)"}catch(n){B.textContent="处理文章内容时出错: "+n.message,B.style.color="var(--warn)"}}function ee(e){return e.split(`

`).map(o=>`<p>${o.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>")}</p>`).join(`
`)}function ne(e){const t=/\*\*(.*?)\*\*/g,n=[],o=new Set;let r;for(;(r=t.exec(e))!==null;){const s=r[1]?.trim();if(!s)continue;const i=mt(s)||s;$t(i,s),o.has(i)||(o.add(i),n.push(i))}S=n}function oe(){if(L.clear(),!rt)return;rt.querySelectorAll("p").forEach(t=>{const n=t.textContent?t.textContent.replace(/\s+/g," ").trim():"";if(!n)return;t.querySelectorAll("strong").forEach(r=>{const s=r.textContent?r.textContent.trim():"";if(!s)return;const i=mt(s)||s;if(!i||L.has(i))return;const a=re(n,s)||n;L.set(i,a)})})}function re(e,t){if(!e||!t)return"";const n=e.replace(/\s+/g," ").trim(),o=t.trim().toLowerCase(),r=n.match(/[^。！？!?\.]+[。！？!?\.]?/g)||[n];for(const s of r)if(s.toLowerCase().includes(o))return s.trim();return n}function se(){ut.classList.add("active"),gt.classList.remove("active"),At.style.display="block",bt.style.display="none"}function X(){ut.classList.remove("active"),gt.classList.add("active"),At.style.display="none",bt.style.display="block"}ut.addEventListener("click",se);gt.addEventListener("click",X);Nt.addEventListener("click",()=>{const e=R.value;e.trim()?(pt(e),X()):(B.textContent="请输入文章内容",B.style.color="var(--warn)")});x&&x.addEventListener("click",te);T&&T.addEventListener("click",e=>{e.preventDefault(),zt()});y&&y.addEventListener("click",async()=>{const e=qt();if(!e.length){h("请先完成AI判题后再同步。","warn"),w("没有可同步的判题分数","warn");return}const t=Y(),n=t.replace(/\/$/,"")+"/api/word-scores",o=Dt(),r=y.dataset.originalText||y.textContent;y.dataset.originalText=r,y.disabled=!0,y.textContent="同步中…",h("正在同步判题结果到服务器…","info");try{const s=await ct(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({results:e,article:o})}),i=Array.isArray(s?.scores)?s.scores:[];W(i);const a=s?.updated??e.length,u=s?.session_id,l=u?`（历史记录 #${u} 已生成）`:"";h(`同步成功，已更新 ${a} 个词汇${l}`,"ok"),w(u?`同步完成！历史记录 #${u}`:"服务器词表已更新 ✓","ok"),localStorage.setItem("score-api-url",t)}catch(s){console.error("[Sync Scores] 同步失败:",s),h(`同步失败：${s.message}`,"warn"),w("同步失败："+s.message,"warn")}finally{y.disabled=!1,y.textContent=y.dataset.originalText||"⬆️ 同步到服务器"}});function ae(e){const t=document.getElementById(G(e));if(t){t.scrollIntoView({behavior:"smooth",block:"center"}),t.focus();const n=t.closest(".item");n&&(n.style.outline="2px solid var(--accent-2)",n.style.boxShadow="0 0 0 4px rgba(137,220,235,.25)",setTimeout(()=>{n.style.outline="",n.style.boxShadow=""},1500))}}function J(){S.forEach(e=>{const t=document.getElementById(G(e));if(!t)return;const n=t.closest(".item");if(!n)return;const o=t.value&&t.value.trim().length>0;n.classList.toggle("filled",o)})}function it(){if(!M)return;M.querySelectorAll(".score-badge").forEach(t=>{const n=t.dataset.termScore,o=n&&P.has(n)?P.get(n):null;typeof o=="number"?(t.textContent=o.toFixed(2),t.classList.add("score-known")):(t.textContent="—",t.classList.remove("score-known"))})}function yt(){M.innerHTML="";const e=xt.value?.trim().toLowerCase();for(const t of S){if(e&&!t.toLowerCase().includes(e))continue;const n=G(t),o=document.createElement("div");o.className="item";const r=P.has(t)?P.get(t):null,s=typeof r=="number"?r.toFixed(2):"—";o.innerHTML=`
      <div class="term" data-term="${t}">
        <span>${t}</span>
        <span class="score-badge" data-term-score="${t}">${s}</span>
        <span class="jump" data-term="${t}">跳到文中</span>
      </div>
      <input aria-label="${t} 中文意思" placeholder="中文意思…" id="${n}" data-term="${t}" />
    `,M.appendChild(o)}J(),it()}yt();M.addEventListener("click",e=>{const t=e.target;if(t.classList.contains("jump"))at(t.dataset.term);else if(t.classList.contains("term")||t.parentElement.classList.contains("term")){const n=t.dataset.term||t.parentElement.dataset.term;n&&at(n)}});xt.addEventListener("input",yt);M.addEventListener("focus",e=>{e.target.tagName==="INPUT"&&e.target.dataset.term&&at(e.target.dataset.term)},!0);document.getElementById("article-content").addEventListener("click",e=>{if(e.target.tagName==="STRONG"){const t=e.target.textContent.trim(),n=mt(t);n&&S.includes(n)&&ae(n)}});const Lt="geo_vocab_answers_v1";function Ct(){const e={};for(const t of S){const n=document.getElementById(G(t));e[t]=n&&n.value||""}return e}function ie(e){if(e){for(const t of S){const n=document.getElementById(G(t));n&&t in e&&(n.value=e[t]||"")}J()}}function Mt(){try{const e=Ct();localStorage.setItem(Lt,JSON.stringify(e)),J()}catch(e){console.warn("[Persist Answers] 保存失败:",e)}}let U=null;function le(){U&&clearTimeout(U),U=setTimeout(()=>{U=null,Mt()},300)}try{const e=JSON.parse(localStorage.getItem(Lt)||"null");ie(e)}catch{}M.addEventListener("input",e=>{const t=e.target;t instanceof HTMLInputElement&&t.dataset.term&&(le(),J())});document.getElementById("clear").addEventListener("click",()=>{for(const e of S){const t=document.getElementById(G(e));t&&(t.value="")}Mt(),J(),w("已清空输入","warn")});function w(e,t){const n=document.createElement("div");n.textContent=e,n.style.position="fixed",n.style.right="18px",n.style.bottom="18px",n.style.background="rgba(10,15,30,.95)",n.style.border="1px solid rgba(122,162,247,.3)",n.style.color=t==="ok"?"var(--ok)":t==="warn"?"var(--warn)":"var(--text)",n.style.padding="10px 12px",n.style.borderRadius="10px",n.style.boxShadow="0 6px 18px var(--shadow)",document.body.appendChild(n),setTimeout(()=>n.remove(),2200)}let _=!1;const C=document.getElementById("ai-config"),D=document.getElementById("ai-results"),ot=document.getElementById("ai-progress"),ce=document.getElementById("progress-fill"),wt=document.getElementById("progress-text"),lt=document.getElementById("score-summary"),O=document.getElementById("ai-identity-check");document.getElementById("ai-grade").addEventListener("click",async()=>{if(C.style.display==="none"){C.style.display="block",p("");const e=localStorage.getItem("ai-api-url"),t=localStorage.getItem("ai-api-key"),n=localStorage.getItem("ai-model")||"gpt-3.5-turbo";e&&(document.getElementById("api-url").value=e),t&&(document.getElementById("api-key").value=t),document.getElementById("ai-model").value=n;const o=localStorage.getItem("score-api-url");F&&(F.value=o||F.value||"http://localhost:4000"),W([]),h("同步后将显示本次提交的词汇成绩","info")}else C.style.display="none"});O.addEventListener("click",async()=>{const{apiUrl:e,apiKey:t,model:n}=ft();if(!e||!t){alert(`请先配置API地址和Key！

点击"🤖 AI工具箱"按钮进行配置。`);return}O.textContent="🔍 检测中...",O.disabled=!0;try{const o=await pe(e,t,n);alert(`AI身份信息：

${o}`)}catch(o){alert(`AI身份检测失败：

${o.message}`)}finally{O.textContent="🔍 检测AI身份",O.disabled=!1}});document.getElementById("cancel-grade").addEventListener("click",()=>{C.style.display="none",_=!1});f&&f.addEventListener("click",async()=>{const{apiUrl:e,apiKey:t,model:n}=ft();if(!e||!t){C.style.display="block",w("请填写API地址和Key","warn");return}const o=f.dataset.originalText||f.textContent;f.dataset.originalText=o,j("判题准备中…",!0);try{await de(e,t,n)}finally{setTimeout(Ut,600)}});async function de(e,t,n="gpt-3.5-turbo"){if(console.log("[Main Grading] 开始AI判题流程"),console.log("[Main Grading] API URL:",e),console.log("[Main Grading] 模型:",n),console.log("[Main Grading] API Key 长度:",t?t.length:0),_){console.warn("[Main Grading] 判题已在进行中，跳过");return}_=!0,ot.style.display="block",D.style.display="none",Bt();try{const o=Ct();console.log("[Main Grading] 收集的数据:",o);const r=S.filter(l=>o[l]&&o[l].trim());if(console.log("[Main Grading] 已填写的词汇:",r),console.log("[Main Grading] 已填写词汇数量:",r.length),r.length===0){console.warn("[Main Grading] 没有填写的词汇"),w("请先填写一些答案","warn"),_=!1,ot.style.display="none";return}wt.textContent=`开始判题... (共${r.length}个词)`,f&&j(`判题中 0/${r.length}`,!0);const s=50,i=[];for(let l=0;l<r.length;l+=s)i.push(r.slice(l,l+s));console.log("[Main Grading] 分批处理:",i.length,"个批次");let a=0;const u={};for(let l=0;l<i.length;l++){const c=i[l];console.log(`[Main Grading] 处理第${l+1}批:`,c),wt.textContent=`正在处理第${l+1}/${i.length}批 (${c.length}个词)...`;try{const d=await ue(c,o,e,t,n);console.log(`[Main Grading] 第${l+1}批结果:`,d),Object.assign(u,d),a+=c.length;const g=a/r.length*100;if(ce.style.width=g+"%",console.log(`[Main Grading] 进度: ${g}% (${a}/${r.length})`),f){const m=Math.round(g);j(`判题中 ${a}/${r.length} (${m}%)`,!0)}l<i.length-1&&(console.log("[Main Grading] 等待1秒避免频率限制"),await new Promise(m=>setTimeout(m,1e3)))}catch(d){console.error(`[Main Grading] 第${l+1}批处理失败:`,d),w(`第${l+1}批处理失败: ${d.message}`,"warn")}}console.log("[Main Grading] 所有批次处理完成，最终结果:",u),kt(u,r.length),f&&j("判题完成 ✓",!0)}catch(o){console.error("[Main Grading] 判题过程错误:",o),w("判题过程中出现错误: "+o.message,"warn"),f&&j("判题失败",!0)}finally{_=!1,ot.style.display="none",console.log("[Main Grading] 判题流程结束")}}async function ue(e,t,n,o,r="gpt-3.5-turbo"){console.log("[Batch Grading] 开始处理批次:",e),console.log("[Batch Grading] 使用模型:",r);const s=me(e,t);console.log("[Batch Grading] 生成的提示词:",s);const i={model:r,messages:[{role:"user",content:s}],temperature:.1};console.log("[Batch Grading] 请求体:",JSON.stringify(i,null,2));const a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(i)});if(console.log("[Batch Grading] 响应状态:",a.status,a.statusText),!a.ok){const g=await a.text();throw console.error("[Batch Grading] API错误响应:",g),new Error(`API请求失败: ${a.status} ${a.statusText}: ${g}`)}const u=await a.json();console.log("[Batch Grading] API响应:",u);const l=u?.choices?.[0]?.message;if(!l)throw console.error("[Batch Grading] 响应格式异常:",u),new Error("API响应格式异常");const c=K(l);console.log("[Batch Grading] AI回复内容:",c);const d=fe(c,e);return console.log("[Batch Grading] 解析结果:",d),d}function ge(e){const t=typeof e=="number"?e:parseFloat(e);if(!Number.isFinite(t))return null;const n=Math.min(Math.max(t,0),1);return Math.round(n*1e3)/1e3}function me(e,t){return`你是一名精通中英文术语的教师，需要判断学生给出的中文翻译与英文术语的语义相似度。请聚焦词义本身，不要贴合特定学科背景或冷僻知识。

请对每个词汇：
1. 给出最标准、最常用的中文翻译（可包含多个词，确保含义准确）。
2. 评估学生答案与标准答案在语义上的相似度，相似度用 0~1 的小数表示：0 代表完全错误，1 代表完全一致。允许保留三位小数。
   - 若学生答案涵盖了主要含义或提供了常见近义词，即使未列出全部释义，也应给予较高分（例如 ≥0.7）。
3. 如有需要，可给出简短说明（10~25个字），解释主要差异或匹配亮点。

在评估时请结合提供的原文语境理解术语的含义，以该语境为准判断学生翻译的准确度。

评分基准示例：
- 学生答案「极点」，标准答案「杆；极点；电极」→ 1.0 分（核心含义完全对应）
- 学生答案「烟」，标准答案「烟雾」→ 0.7 分（传达主要概念，细节略缺）
- 学生答案「平坦的」，标准答案「平原」→ 0.5 分（相关但偏向形容词，需要指出语义差异）

务必只输出 JSON，不要解释。JSON 格式如下：
{
  "英文词汇": {
    "标准答案": "标准中文翻译",
    "相似度": 0.000,
    "说明": "可选，若无则留空字符串"
  }
}

待评估的词汇与学生答案：
${e.map(o=>{const s=(L.get(o)||"（原文未提供语境）").replace(/\s+/g," ").trim(),i=t[o]&&t[o].trim()?t[o].trim():"(空白)";return`- 英文词汇: ${o}
  原文语境: ${s}
  学生翻译: ${i}`}).join(`
`)}`}function fe(e,t){console.log("[Parse Response] 开始解析AI回复:",e),console.log("[Parse Response] 需要解析的词汇:",t);try{const n=e.match(/\{[\s\S]*\}/);if(console.log("[Parse Response] JSON匹配结果:",n?n[0]:"null"),!n)throw console.warn("[Parse Response] 未找到JSON格式，使用fallback解析"),new Error("无法解析AI回复格式");const o=JSON.parse(n[0]);console.log("[Parse Response] JSON解析成功:",o);const r={};return t.forEach(s=>{console.log(`[Parse Response] 处理词汇: ${s}`);const i=o[s]||o[s.trim()]||null;if(i&&typeof i=="object"){const a=i.相似度??i.similarity??i.score,u=ge(typeof a=="string"?parseFloat(a):a),l=(i.标准答案??i.正确答案??"").toString().trim(),c=(i.说明??i.解释??"").toString().trim();r[s]={similarity:typeof u=="number"?u:null,standardAnswer:l||null,explanation:c||null},console.log(`[Parse Response] ${s} 解析成功 - 相似度:`,r[s].similarity,"标准答案:",r[s].standardAnswer,"说明:",r[s].explanation)}else if(typeof i=="string"){const a=i==="正确";r[s]={similarity:a?1:0,standardAnswer:null,explanation:null},console.log(`[Parse Response] ${s} 使用旧格式字符串 - 相似度模拟:`,r[s].similarity)}else console.log(`[Parse Response] ${s} 未在解析结果中找到，使用fallback`),r[s]={similarity:null,standardAnswer:null,explanation:null}}),console.log("[Parse Response] 最终解析结果:",r),r}catch(n){console.error("[Parse Response] JSON解析失败:",n),console.log("[Parse Response] 使用fallback解析方法");const o={};return t.forEach(r=>{const s=r.toLowerCase(),i=e.toLowerCase();o[r]={similarity:i.includes(s)?.5:null,standardAnswer:null,explanation:null},console.log(`[Parse Response] ${r} fallback结果 - 相似度: ${o[r].similarity}`)}),console.log("[Parse Response] Fallback最终结果:",o),o}}function kt(e,t,n={}){const{suppressToast:o=!1}=n||{};q=e||{};const r=Object.values(e).map(c=>typeof c.similarity=="number"?c.similarity:null).filter(c=>c!==null),s=r.length?Math.round(r.reduce((c,d)=>c+d,0)/r.length*100)/100:0,i=r.filter(c=>c>=H).length,a=r.filter(c=>c<H&&c>=et).length,u=H.toFixed(2),l=et.toFixed(2);lt.innerHTML=`
    <div>判题完成！</div>
    <div class="score-line">
      <span>平均相似度：<strong>${s.toFixed(2)}</strong></span>
      <span>高匹配(≥${u}): <strong>${i}</strong></span>
      <span>中等匹配(≥${l}): <strong>${a}</strong></span>
      <span>总词数: <strong>${t}</strong></span>
    </div>
  `,Object.entries(e).forEach(([c,d])=>{const g=document.querySelector(`[data-term="${c}"]`)?.closest(".item");if(!g)return;g.classList.remove("correct","incorrect","partial");const m=typeof d.similarity=="number"?d.similarity:null;let A="incorrect";m!==null&&(m>=H?A="correct":m>=et&&(A="partial")),g.classList.add(A);const v=g.querySelector(".term");if(!v)return;let b=v.querySelector(".grade-indicator");b||(b=document.createElement("span"),b.className="grade-indicator",v.appendChild(b)),b.className=`grade-indicator ${A}`,b.textContent=m!==null?m.toFixed(2):"—",b.title="语义相似度 (0-1)";let E=g.querySelector(".grading-details");if(E||(E=document.createElement("div"),E.className="grading-details",g.appendChild(E)),E.innerHTML="",m!==null){const I=document.createElement("div"),$=document.createElement("strong");$.textContent="相似度:",I.appendChild($),I.appendChild(document.createTextNode(" "+m.toFixed(2))),E.appendChild(I)}if(d.standardAnswer){const I=document.createElement("div"),$=document.createElement("strong");$.textContent="标准答案:",I.appendChild($),I.appendChild(document.createTextNode(" "+d.standardAnswer)),E.appendChild(I)}if(d.explanation){const I=document.createElement("div"),$=document.createElement("strong");$.textContent="说明:",I.appendChild($),I.appendChild(document.createTextNode(" "+d.explanation)),E.appendChild(I)}E.hasChildNodes()||E.remove()}),D.style.display="block",C.style.display="none",o||w(`判题完成！平均相似度 ${s.toFixed(2)}`,"ok")}function Bt(){q={},document.querySelectorAll(".item").forEach(e=>{e.classList.remove("correct","incorrect","partial");const t=e.querySelector(".grade-indicator");t&&t.remove();const n=e.querySelector(".grading-details");n&&n.remove()})}async function pe(e,t,n="gpt-3.5-turbo"){console.log("[AI Identity] 开始检测AI身份"),console.log("[AI Identity] API URL:",e),console.log("[AI Identity] 模型:",n),console.log("[AI Identity] API Key 长度:",t?t.length:0);const o={model:n,messages:[{role:"user",content:"你好，请详细介绍一下你自己，包括你的名称、版本、主要功能和特色。"}],temperature:.1,max_tokens:200};console.log("[AI Identity] 请求体:",JSON.stringify(o,null,2));const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(o)});if(console.log("[AI Identity] 响应状态:",r.status,r.statusText),!r.ok){const u=await r.text();throw console.error("[AI Identity] API错误响应:",u),new Error(`${r.status} ${r.statusText}: ${u}`)}const s=await r.json();console.log("[AI Identity] API响应:",s);const i=s?.choices?.[0]?.message;if(!i)throw console.error("[AI Identity] 响应格式异常:",s),new Error("API响应格式异常");const a=K(i);if(!a)throw console.error("[AI Identity] 未获得文本回复:",i),new Error("AI未返回文本信息");return console.log("[AI Identity] AI回复:",a),a}async function ye(e){const t=Number(e);if(!Number.isInteger(t)||t<=0){h(`无法识别的历史记录编号：${e}`,"warn");return}const n=Y();if(!n){h("请先配置服务器地址再加载历史记录。","warn");return}const o=`${n.replace(/\/$/,"")}/api/sessions/${t}`;h(`正在加载历史记录 #${t}…`,"info");try{const r=await fetch(o,{headers:{Accept:"application/json"}});if(!r.ok){const c=await r.text();throw new Error(`HTTP ${r.status} ${r.statusText}: ${c}`)}const s=await r.json(),i=s?.session||{},a=Array.isArray(s?.results)?s.results:[],u=typeof i.article=="string"?i.article:"";typeof N<"u"&&(N=u),R&&(R.value=u),pt(u||"",[]),X();const l={};if(a.forEach(c=>{if(!c||typeof c.term!="string")return;const d=c.term.trim();if(!d)return;const g=typeof c.similarity=="number"?c.similarity:Number(c.similarity),m=c.standard_answer||c.standardAnswer||null,A=c.explanation||null;l[d]={similarity:Number.isFinite(g)?g:null,standardAnswer:m,explanation:A},c.context&&L&&L.set(d,c.context)}),Object.keys(l).length?kt(l,i.total_terms||a.length,{suppressToast:!0}):(Bt(),D.style.display="none"),lt){const c=i.submitted_at?new Date(i.submitted_at):null,d=typeof i.avg_similarity=="number"?i.avg_similarity:Number(i.avg_similarity),g=[];c&&!Number.isNaN(c.getTime())&&g.push(`提交时间：${c.toLocaleString()}`),g.push(`总词数：${i.total_terms??a.length}`),Number.isFinite(d)&&g.push(`平均相似度：${d.toFixed(2)}`),g.push(`正确 / 部分正确 / 错误：${i.correct_terms??0} / ${i.partial_terms??0} / ${i.incorrect_terms??0}`),lt.insertAdjacentHTML("beforeend",`<div class="score-line history-note">${g.join(" ｜ ")}</div>`)}D.style.display="block",C.style.display="none",h(`已加载历史记录 #${t}，如需重新练习可直接编辑文章。`,"ok"),document.body.classList.add("replay-mode")}catch(r){console.error("[History Replay] 加载历史记录失败:",r),h(`加载历史记录失败：${r.message}`,"warn"),w("加载历史记录失败："+r.message,"warn")}}const It=new URLSearchParams(window.location.search).get("session");It&&ye(It);

import{e as L,f as gt}from"./chunks/html.js";function _t({listElement:t,filterInput:e,scoreCache:n,makeId:r}){function s(a){if(Array.isArray(a))for(const d of a){const i=document.getElementById(r(d));if(!i)continue;const c=i.closest(".item");if(!c)continue;const g=i.value&&i.value.trim().length>0;c.classList.toggle("filled",g)}}function o(){if(!t)return;t.querySelectorAll(".score-badge").forEach(d=>{const i=d.dataset.termScore,c=i&&n?.has(i)?n.get(i):null;typeof c=="number"?(d.textContent=c.toFixed(2),d.classList.add("score-known")):(d.textContent="—",d.classList.remove("score-known"))})}function l(a){if(!t||!Array.isArray(a))return;const d=e?.value?.trim().toLowerCase(),i=[];for(const c of a){if(d&&!c.toLowerCase().includes(d))continue;const g=r(c),u=n?.has(c)?n.get(c):null,f=typeof u=="number"?u.toFixed(2):"—";i.push(`
        <div class="item">
          <div class="term" data-term="${L(c)}">
            <span>${L(c)}</span>
            <span class="score-badge" data-term-score="${L(c)}">${f}</span>
            <span class="jump" data-term="${L(c)}">跳到文中</span>
          </div>
          <input aria-label="${L(c)} 中文意思" placeholder="中文意思…" id="${L(g)}" data-term="${L(c)}" />
        </div>
      `)}t.innerHTML=i.join(""),s(a),o()}return{buildList:l,updateFilledState:s,updateScoreBadges:o}}function Ft(t={}){const e={...t},n=new Map;function r(a){return e[a]}function s(a,d){const i=e[a];if(e[a]=d,i===d)return d;const c=n.get(a);if(c)for(const g of c)try{g(d,{...e})}catch(u){console.error("[Store] listener error",u)}return d}function o(a,d){if(typeof d!="function")return()=>{};const i=n.get(a);return i?i.add(d):n.set(a,new Set([d])),()=>{const c=n.get(a);c&&(c.delete(d),c.size===0&&n.delete(a))}}function l(){return{...e}}return{get:r,set:s,subscribe:o,snapshot:l}}const H=Ft({vocabs:[],serverScores:[],gradingResults:{},articleMarkdown:""}),bt=t=>H.set("vocabs",Array.isArray(t)?[...t]:[]),vt=t=>H.set("serverScores",Array.isArray(t)?[...t]:[]),Vt=t=>H.set("gradingResults",t||{}),Jt=t=>H.set("articleMarkdown",typeof t=="string"?t:"");let h=[];const V=new Map,ft=new Map,T=new Map;let M="";const X=document.getElementById("list"),Et=document.getElementById("filter"),mt=document.getElementById("edit-mode-btn"),pt=document.getElementById("view-mode-btn"),$t=document.getElementById("edit-section"),Lt=document.getElementById("view-section"),G=document.getElementById("article-editor"),Ht=document.getElementById("save-article-btn"),N=document.getElementById("editor-status"),lt=document.getElementById("article-content"),ct=document.getElementById("generator-words"),S=document.getElementById("generate-article-btn"),ot=document.getElementById("generator-status"),m=document.getElementById("start-grade"),w=document.getElementById("sync-server"),R=document.getElementById("sync-status"),P=document.getElementById("server-scores"),F=document.getElementById("score-api-url"),Ct=document.getElementById("api-url"),Tt=document.getElementById("api-key"),Mt=document.getElementById("ai-model"),Ut=document.getElementById("practiced-count"),qt=document.getElementById("total-count"),Dt=document.getElementById("mastery-threshold"),C=document.getElementById("auto-fill-words"),z=new Map,W=new Map;function Bt(t,{reset:e=!1}={}){if(e&&(z.clear(),W.clear()),!Array.isArray(t)){v.updateScoreBadges();return}for(const n of t){if(!n||typeof n.term!="string")continue;const r=n.term.trim();if(!r)continue;const s=Number(n.score);Number.isFinite(s)?z.set(r,s):z.delete(r);const o=Number(n.submissions);Number.isFinite(o)?W.set(r,o):W.delete(r)}v.updateScoreBadges()}const v=_t({listElement:X,filterInput:Et,scoreCache:z,makeId:U});H.subscribe("vocabs",t=>{h=Array.isArray(t)?[...t]:[],v.buildList(h)});w&&!w.dataset.originalText&&(w.dataset.originalText=w.textContent);ht([]);I("","info");Rt({quiet:!0});const Kt=220,rt=.85,st=.6;let J={};function U(t){return"term-"+t.toLowerCase().replace(/[^a-z0-9]+/g,"-")}function kt(t,e){const n=typeof t=="string"?t.trim():"";if(!n)return;const r=typeof e=="string"&&e.trim()?e.trim():n;V.set(r.toLowerCase(),n),V.set(n.toLowerCase(),n),ft.set(n,r)}function zt(t=[]){if(V.clear(),ft.clear(),!!Array.isArray(t))for(const e of t)!e||typeof e!="object"||kt(e.original,e.used)}function yt(t){if(!t)return null;const e=t.trim().toLowerCase();return V.has(e)?V.get(e):h.find(r=>r.toLowerCase()===e)||null}function Wt(t){if(!t)return null;const e=t.trim();return ft.get(e)||e}function dt(t){const e=Wt(t)||t,n="t-"+e.toLowerCase().replace(/[^a-z0-9]+/g,"-"),r=document.getElementById(n);if(r){r.scrollIntoView({behavior:"smooth",block:"center"}),At(r);return}const s=document.querySelectorAll("#article-content strong"),o=e.toLowerCase();for(const l of s){const a=l.textContent.trim().toLowerCase();if(a===o||a.includes(o)){l.scrollIntoView({behavior:"smooth",block:"center"}),At(l);return}}alert("在文章中未找到该词："+t)}function At(t){t.style.outline="2px solid var(--accent-2)",t.style.boxShadow="0 0 0 4px rgba(137,220,235,.25)",setTimeout(()=>{t.style.outline="",t.style.boxShadow=""},1500)}function Yt(t){if(!t)return[];const e=t.split(/[\n,，、；;]+/),n=new Set,r=[];for(const s of e){const o=s.trim();o&&!n.has(o)&&(n.add(o),r.push(o))}return r}function Xt(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function Z(t){if(!t)return"";const{content:e,text:n,tool_calls:r}=t,s=a=>a?typeof a=="string"?a:typeof a=="number"||typeof a=="boolean"?String(a):typeof a=="object"?typeof a.text=="string"?a.text:Array.isArray(a.text)?a.text.map(s).join(""):a.type==="text"&&typeof a.value=="string"?a.value:a.type==="text"&&typeof a.data=="string"?a.data:(a.type==="tool_call"&&a.function?.arguments,""):"":"";let o=[];if(typeof e=="string"?o.push(e):Array.isArray(e)?o.push(e.map(s).join("")):e&&typeof e=="object"&&(typeof e.text=="string"?o.push(e.text):Array.isArray(e.text)&&o.push(e.text.map(s).join(""))),typeof n=="string"?o.push(n):Array.isArray(n)&&o.push(n.map(s).join("")),(!o.length||o.join("").trim()==="")&&Array.isArray(r))for(const a of r)a?.function?.result&&typeof a.function.result=="string"&&o.push(a.function.result);return o.join(`
`).trim()}function Zt(t){const e=Xt(t.trim());return e?/\s/.test(t)?new RegExp(e.replace(/\s+/g,"\\s+"),"i"):new RegExp(`\\b${e}\\b`,"i"):null}function Q(t,e,{trim:n=!0}={}){if(!t)return;const r=()=>{const s=n?t.value.trim():t.value;s?localStorage.setItem(e,s):localStorage.removeItem(e)};t.addEventListener("change",r),t.addEventListener("blur",r)}function Qt(t,e,n=[]){const r=t.replace(/\*\*/g,""),s=new Set,o=/\*\*(.*?)\*\*/g;let l;for(;(l=o.exec(t))!==null;){const i=l[1]?.trim().toLowerCase();i&&s.add(i)}const a=new Map;if(Array.isArray(n))for(const i of n){if(!i||typeof i!="object")continue;const c=typeof i.original=="string"?i.original.trim().toLowerCase():"",g=typeof i.used=="string"?i.used.trim().toLowerCase():"";c&&g&&a.set(c,g),c&&!g&&a.set(c,c)}const d=[];for(const i of e){const c=typeof i=="string"?i.trim().toLowerCase():"";if(!c||s.has(c))continue;const g=a.get(c);if(g&&s.has(g))continue;const u=Zt(i);u&&(u.test(r)||d.push(i))}return d}function y(t,e="info"){if(!ot)return;const n={info:"var(--muted)",ok:"var(--ok)",warn:"var(--warn)"};ot.textContent=t||"",ot.style.color=n[e]||n.info}Q(Ct,"ai-api-url");Q(Tt,"ai-api-key");Q(Mt,"ai-model");Q(F,"score-api-url");function j(t,e){m&&(typeof t=="string"&&(m.textContent=t),m.disabled=e)}function te(){m&&(m.disabled=!1,m.textContent=m.dataset.originalText||"📝 开始判题")}function I(t,e="info"){R&&(R.classList.remove("ok","warn"),e==="ok"&&R.classList.add("ok"),e==="warn"&&R.classList.add("warn"),e!=="ok"&&e!=="warn"&&R.classList.remove("ok","warn"),R.textContent=t||"")}function ht(t){P&&(vt(Array.isArray(t)?t:[]),Bt(t,{reset:!1}),P.style.display="none",P.innerHTML="")}function tt(){const t=F?.value?.trim();if(t)return t;const e=localStorage.getItem("score-api-url");return e||"http://localhost:4000"}function ee(){const t=[];if(!J)return t;for(const[e,n]of Object.entries(J))if(n&&typeof n.similarity=="number"){const r=T.get(e)||"";t.push({term:e,similarity:n.similarity,context:r||null,standard_answer:n.standardAnswer?String(n.standardAnswer):null,explanation:n.explanation?String(n.explanation):null})}return t}function ne(){return typeof M=="string"&&M.trim()?M.trim():typeof G?.value=="string"?G.value.trim():""}function oe(){const t=Number(Ut?.value??0),e=Number(qt?.value??0),n=Number(Dt?.value??1),r=Number.isFinite(t)?Math.max(0,Math.min(50,Math.round(t))):0,s=Number.isFinite(e)?Math.max(0,Math.min(50,Math.round(e))):0,o=Number.isFinite(n)?n:1;return{practiced:r,total:s,masteryThreshold:o}}async function Rt({quiet:t=!1}={}){try{const n=tt().replace(/\/$/,"")+"/api/word-scores",r=await gt(n);Array.isArray(r?.scores)?(vt(r.scores),Bt(r.scores,{reset:!0}),P&&(P.style.display="none",P.innerHTML=""),t||I(`已获取服务器记录（${r.scores.length} 个词）`,"ok")):t||I("服务器未返回有效数据","warn")}catch(e){t||I(`无法获取服务器分数：${e.message}`,"warn")}}async function re(){if(!C)return;const{practiced:t,total:e,masteryThreshold:n}=oe();if(!e){y("请设置总词数（至少 1）","warn");return}if(t>e){y("练习过的词数不能超过总词数","warn");return}const r=tt(),s=`${r.replace(/\/$/,"")}/api/word-suggestions?practiced=${t}&total=${e}&threshold=${encodeURIComponent(n)}`;C.disabled=!0,C.textContent="获取中…",y("正在向服务器请求推荐词汇…","info");try{const o=await gt(s),l=Array.isArray(o?.practiced)?o.practiced.map(i=>i.term).filter(Boolean):[],a=Array.isArray(o?.fresh)?o.fresh.map(i=>i.term).filter(Boolean):[];if(!l.length&&!a.length){y("未获取到符合条件的词汇，请调整参数。","warn");return}const d=[];l.length&&d.push(l.join(", ")),a.length&&d.push(a.join(", ")),ct.value=d.join(`

`),y(`已填入 ${l.length} 个练习词与 ${a.length} 个新词`,"ok"),localStorage.setItem("score-api-url",r)}catch(o){console.error("[Auto Fill Words] 获取失败:",o),y(`获取推荐词汇失败：${o.message}`,"warn")}finally{C.disabled=!1,C.textContent="🎯 自动取词"}}function wt(){const t=Ct?.value?.trim(),e=Tt?.value?.trim(),n=Mt?.value?.trim(),r=localStorage.getItem("ai-api-url"),s=localStorage.getItem("ai-api-key"),o=localStorage.getItem("ai-model"),l=(t||r||"").trim(),a=(e||s||"").trim(),d=(n||o||"gpt-3.5-turbo").trim()||"gpt-3.5-turbo";return t!==void 0&&(t?localStorage.setItem("ai-api-url",t):localStorage.removeItem("ai-api-url")),e!==void 0&&(e?localStorage.setItem("ai-api-key",e):localStorage.removeItem("ai-api-key")),n!==void 0&&(n?localStorage.setItem("ai-model",n):localStorage.removeItem("ai-model")),{apiUrl:l,apiKey:a,model:d}}function se(t){const e=[...t];for(let n=e.length-1;n>0;n--){const r=Math.floor(Math.random()*(n+1));[e[n],e[r]]=[e[r],e[n]]}return e}function ae(t){return`请为英语学习者写一篇英文短文，使用 Markdown 段落格式（可自行分段，但不要添加标题、前言或代码块）。严格遵守下列规则：

**A. 标注与频次**

* 仅对目标词加粗，形式为 **word**；除目标词外不得使用粗体。
* 每个目标词至少出现一次；可按语境变化词形，并对变化后的词形加粗。
* **每句最多出现一个目标词**；禁止在同一句用并列（如 “X and Y” 或 “X, Y, and Z”）放入多个目标词。

**B. 语义分散与防“扎堆”**

* **同义、近义、反义、同词根或同一语义场的目标词，彼此之间至少间隔 ≥2 句**；不得出现在相邻句或同一句。
* 若两词常作并列形容或可互换使用，只在不同句中出现，且置于不同话题或功能（如一个作描述，另一个用于行动或结果）。

**C. 连贯性与结构（重点）**

* 先在内部拟定“三段式叙事”但**不输出大纲**：
  1）开端：交代时间、地点、人物与目标；
  2）发展：行动、阻碍与抉择；
  3）结尾：结果或反思，呼应目标。
* 全文保持**同一组人物/地点/目标**贯穿；不要无提示地更换场景或人物。
* **句际逻辑**清晰：每句与上一句构成时间顺序、因果、递进或转折关系。必要时在句首使用 then, later, because, however, therefore, eventually 等连接词（适量使用）。
* 禁止清单式、口号式或与主线无关的跳转；避免模板化重复句式。

**D. 语境暗示，禁止定义式写法**

* 禁止 “**X** is/means/refers to/also called/defined as …” 等定义句；禁止在目标词所在句用括号、破折号、同位语或 “i.e./such as/for example” 给出直白解释或同义替换。
* 不给出中文释义或直译提示词；通过动作、结果、感受、对话或情境**间接**表达含义。

**E. 篇幅与段落**

* 句子数应 ≥ 目标词数量，优先采用“一词一句”。

**F. 输出**

* **仅输出文章正文**，保留 Markdown 段落与粗体标记；不要添加任何额外说明、标题、列表或 JSON。

目标词汇（顺序随机）：

${t.map((n,r)=>`${r+1}. ${n}`).join(`
`)}`}function ie(t,e){const n=e.map((r,s)=>`${s+1}. ${r}`).join(`
`);return`请阅读下方的英文文章，并根据提供的目标词汇列表，指出文章中每个词汇的实际写法。

输出一个 JSON 对象，格式如下：
{
  "pairs": [
    {"original": "目标词汇", "used": "文章中的实际写法（去掉**，若未出现则留空字符串）"}
  ]
}

要求：
- original 必须与提供的目标词汇完全一致；
- used 为文章中出现的具体形式（保留大小写/单复数等变化，但去掉任何 Markdown ** 标记）；
- 如果某个词未在文章中出现，将 used 设为空字符串。

英文文章：
"""
${t}
"""

目标词汇列表：
${n}`}function at(t){return typeof t!="string"?"":t.replace(/\*\*/g,"").trim()}function le(t,e){const n=(e||[]).map(i=>({original:i,used:i}));if(!t)return n;let r=t.trim();if(!r)return n;let s=null;const o=r.match(/```(?:json)?([\s\S]*?)```/i);if(o)s=o[1].trim();else{const i=r.match(/\{[\s\S]*\}/);i&&(s=i[0])}let l=[];if(s)try{const i=JSON.parse(s);l=(Array.isArray(i?.pairs)?i.pairs:Array.isArray(i)?i:[]).map(g=>{if(!g||typeof g!="object")return null;const u=typeof g.original=="string"?g.original.trim():"",f=at(g.used??"");return u?{original:u,used:f||""}:null}).filter(Boolean)}catch(i){console.warn("[Variant Mapping] JSON解析失败，尝试解析纯文本格式",i),l=[]}if(!l.length){const i=r.split(/\n+/).map(c=>c.trim()).filter(Boolean);for(const c of i){const g=c.match(/^(.+?)\s*(?:=>|->|：|:|=)\s*(.+)$/);if(!g)continue;const u=g[1].trim(),f=at(g[2]);u&&l.push({original:u,used:f})}}const a=new Map;for(const i of l){const c=typeof i.original=="string"?i.original.trim():"";if(!c)continue;const g=c.toLowerCase(),u=at(i.used||c);a.has(g)||a.set(g,{original:c,used:u||c})}const d=[];for(const i of e||[]){const c=i.trim().toLowerCase(),g=a.get(c),u=g?g.used:i;d.push({original:i,used:u})}return d}async function ce(t,e,n,r,s){const o=ie(r,s),l={model:n,messages:[{role:"system",content:"You are an assistant that extracts vocabulary mappings and responds with concise JSON."},{role:"user",content:o}],temperature:0,max_tokens:3e3};console.log("[Variant Mapping] 请求体:",JSON.stringify(l,null,2));const a=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(l)});if(console.log("[Variant Mapping] 响应状态:",a.status,a.statusText),!a.ok){const g=await a.text();throw console.error("[Variant Mapping] API错误响应:",g),new Error(`词形映射请求失败: ${a.status} ${a.statusText}: ${g}`)}const d=await a.json();console.log("[Variant Mapping] API响应:",d);const i=d?.choices?.[0]?.message;if(!i)throw new Error("词形映射响应格式异常");const c=Z(i);return console.log("[Variant Mapping] AI回复:",c),le(c,s)}async function de(){if(!S)return;const t=Yt(ct?.value||"");if(!t.length){y("请至少输入一个目标词汇","warn"),ct?.focus();return}const{apiUrl:e,apiKey:n,model:r}=wt();if(!e||!n){y("请先在右侧配置AI API地址与Key","warn");return}const s=S.dataset.originalText||S.textContent;try{S.disabled=!0,S.dataset.originalText=s,S.textContent="生成中…",y("正在请求AI生成文章…","info");const o=se(t),l=ae(o),a={model:r,messages:[{role:"system",content:"You are an expert science writer who produces fluent, engaging English articles in Markdown without extra commentary."},{role:"user",content:l}],temperature:.65,top_p:.9,max_tokens:Math.min(1200,Math.round(Kt*4.2))};console.log("[Article Generator] 请求体:",JSON.stringify(a,null,2));const d=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(a)});if(!d.ok){const k=await d.text();throw new Error(`API请求失败: ${d.status} ${d.statusText} | ${k}`)}const i=await d.json();console.log("[Article Generator] API响应:",i);const c=i?.choices?.[0]?.message;if(!c)throw new Error("AI未返回文章内容");const g=Z(c);if(!g)throw new Error("AI未返回文章内容");G.value=g.trim();let u,f=!1;try{if(y("文章生成成功，正在分析词形映射…","info"),u=await ce(e,n,r,g,t),!Array.isArray(u)||!u.length)throw new Error("未获得有效的词形映射")}catch(k){console.error("[Article Generator] 词形映射失败:",k),u=t.map(q=>({original:q,used:q})),y("文章生成完成，但词形映射失败，已使用原始词汇。","warn"),A("词形映射失败，已使用原始词汇","warn"),f=!0}console.log("[Article Generator] 最终词形映射:",u),It(g,u),et();const p=Qt(g,t,u);if(p.length){const k=`⚠️ 已生成文章，但缺少 ${p.length} 个词：${p.join("，")}`;y(k,"warn"),A("生成完成，但存在缺失词汇，请手动补充。","warn")}else f||(y("AI文章生成完成，词汇与词形均已覆盖 ✓","ok"),A("文章生成成功并包含全部目标词汇！","ok"));await Rt({quiet:!0})}catch(o){console.error("[Article Generator] 生成文章失败:",o),y(`生成失败：${o.message}`,"warn")}finally{S.disabled=!1,S.textContent=S.dataset.originalText||"✨ AI生成文章"}}function It(t,e=[]){try{M=typeof t=="string"?t:"",Jt(M),zt(e);const n=ue(t);lt.innerHTML=n,ge(t),fe(),v.buildList(h),N.textContent="文章保存成功！",N.style.color="var(--ok)"}catch(n){N.textContent="处理文章内容时出错: "+n.message,N.style.color="var(--warn)"}}function ue(t){return t.split(`

`).map(r=>`<p>${r.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>")}</p>`).join(`
`)}function ge(t){const e=/\*\*(.*?)\*\*/g,n=[],r=new Set;let s;for(;(s=e.exec(t))!==null;){const o=s[1]?.trim();if(!o)continue;const l=yt(o)||o;kt(l,o),r.has(l)||(r.add(l),n.push(l))}bt(n)}function fe(){if(T.clear(),!lt)return;lt.querySelectorAll("p").forEach(e=>{const n=e.textContent?e.textContent.replace(/\s+/g," ").trim():"";if(!n)return;e.querySelectorAll("strong").forEach(s=>{const o=s.textContent?s.textContent.trim():"";if(!o)return;const l=yt(o)||o;if(!l||T.has(l))return;const a=me(n,o)||n;T.set(l,a)})})}function me(t,e){if(!t||!e)return"";const n=t.replace(/\s+/g," ").trim(),r=e.trim().toLowerCase(),s=n.match(/[^。！？!?.]+[。！？!?.]?/g)||[n];for(const o of s)if(o.toLowerCase().includes(r))return o.trim();return n}function pe(){mt.classList.add("active"),pt.classList.remove("active"),$t.style.display="block",Lt.style.display="none"}function et(){mt.classList.remove("active"),pt.classList.add("active"),$t.style.display="none",Lt.style.display="block"}mt.addEventListener("click",pe);pt.addEventListener("click",et);Ht.addEventListener("click",()=>{const t=G.value;t.trim()?(It(t),et()):(N.textContent="请输入文章内容",N.style.color="var(--warn)")});S&&S.addEventListener("click",de);C&&C.addEventListener("click",t=>{t.preventDefault(),re()});w&&w.addEventListener("click",async()=>{const t=ee();if(!t.length){I("请先完成AI判题后再同步。","warn"),A("没有可同步的判题分数","warn");return}const e=tt(),n=e.replace(/\/$/,"")+"/api/word-scores",r=ne(),s=w.dataset.originalText||w.textContent;w.dataset.originalText=s,w.disabled=!0,w.textContent="同步中…",I("正在同步判题结果到服务器…","info");try{const o=await gt(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({results:t,article:r})}),l=Array.isArray(o?.scores)?o.scores:[];ht(l);const a=o?.updated??t.length,d=o?.session_id,i=d?`（历史记录 #${d} 已生成）`:"";I(`同步成功，已更新 ${a} 个词汇${i}`,"ok"),A(d?`同步完成！历史记录 #${d}`:"服务器词表已更新 ✓","ok"),localStorage.setItem("score-api-url",e)}catch(o){console.error("[Sync Scores] 同步失败:",o),I(`同步失败：${o.message}`,"warn"),A("同步失败："+o.message,"warn")}finally{w.disabled=!1,w.textContent=w.dataset.originalText||"⬆️ 同步到服务器"}});function ye(t){const e=document.getElementById(U(t));if(e){e.scrollIntoView({behavior:"smooth",block:"center"}),e.focus();const n=e.closest(".item");n&&(n.style.outline="2px solid var(--accent-2)",n.style.boxShadow="0 0 0 4px rgba(137,220,235,.25)",setTimeout(()=>{n.style.outline="",n.style.boxShadow=""},1500))}}bt(h);X.addEventListener("click",t=>{const e=t.target;if(e.classList.contains("jump"))dt(e.dataset.term);else if(e.classList.contains("term")||e.parentElement.classList.contains("term")){const n=e.dataset.term||e.parentElement.dataset.term;n&&dt(n)}});Et.addEventListener("input",()=>v.buildList(h));X.addEventListener("focus",t=>{t.target.tagName==="INPUT"&&t.target.dataset.term&&dt(t.target.dataset.term)},!0);document.getElementById("article-content").addEventListener("click",t=>{if(t.target.tagName==="STRONG"){const e=t.target.textContent.trim(),n=yt(e);n&&h.includes(n)&&ye(n)}});const Nt="geo_vocab_answers_v1";function Pt(){const t={};for(const e of h){const n=document.getElementById(U(e));t[e]=n&&n.value||""}return t}function he(t){if(t){for(const e of h){const n=document.getElementById(U(e));n&&e in t&&(n.value=t[e]||"")}v.updateFilledState(h)}}function Gt(){try{const t=Pt();localStorage.setItem(Nt,JSON.stringify(t)),v.updateFilledState(h)}catch(t){console.warn("[Persist Answers] 保存失败:",t)}}let K=null;function we(){K&&clearTimeout(K),K=setTimeout(()=>{K=null,Gt()},300)}try{const t=JSON.parse(localStorage.getItem(Nt)||"null");he(t)}catch(t){console.warn("[Persist Answers] 恢复缓存失败:",t)}X.addEventListener("input",t=>{const e=t.target;e instanceof HTMLInputElement&&e.dataset.term&&(we(),v.updateFilledState(h))});document.getElementById("clear").addEventListener("click",()=>{for(const t of h){const e=document.getElementById(U(t));e&&(e.value="")}Gt(),v.updateFilledState(h),A("已清空输入","warn")});function A(t,e){const n=document.createElement("div");n.textContent=t,n.style.position="fixed",n.style.right="18px",n.style.bottom="18px",n.style.background="rgba(10,15,30,.95)",n.style.border="1px solid rgba(122,162,247,.3)",n.style.color=e==="ok"?"var(--ok)":e==="warn"?"var(--warn)":"var(--text)",n.style.padding="10px 12px",n.style.borderRadius="10px",n.style.boxShadow="0 6px 18px var(--shadow)",document.body.appendChild(n),setTimeout(()=>n.remove(),2200)}let _=!1;const B=document.getElementById("ai-config"),Y=document.getElementById("ai-results"),it=document.getElementById("ai-progress"),Ie=document.getElementById("progress-fill"),xt=document.getElementById("progress-text"),ut=document.getElementById("score-summary"),O=document.getElementById("ai-identity-check");document.getElementById("ai-grade").addEventListener("click",async()=>{if(B.style.display==="none"){B.style.display="block",y("");const t=localStorage.getItem("ai-api-url"),e=localStorage.getItem("ai-api-key"),n=localStorage.getItem("ai-model")||"gpt-3.5-turbo";t&&(document.getElementById("api-url").value=t),e&&(document.getElementById("api-key").value=e),document.getElementById("ai-model").value=n;const r=localStorage.getItem("score-api-url");F&&(F.value=r||F.value||"http://localhost:4000"),ht([]),I("同步后将显示本次提交的词汇成绩","info")}else B.style.display="none"});O.addEventListener("click",async()=>{const{apiUrl:t,apiKey:e,model:n}=wt();if(!t||!e){alert(`请先配置API地址和Key！

点击"🤖 AI工具箱"按钮进行配置。`);return}O.textContent="🔍 检测中...",O.disabled=!0;try{const r=await Ee(t,e,n);alert(`AI身份信息：

${r}`)}catch(r){alert(`AI身份检测失败：

${r.message}`)}finally{O.textContent="🔍 检测AI身份",O.disabled=!1}});document.getElementById("cancel-grade").addEventListener("click",()=>{B.style.display="none",_=!1});m&&m.addEventListener("click",async()=>{const{apiUrl:t,apiKey:e,model:n}=wt();if(!t||!e){B.style.display="block",A("请填写API地址和Key","warn");return}const r=m.dataset.originalText||m.textContent;m.dataset.originalText=r,j("判题准备中…",!0);try{await Ae(t,e,n)}finally{setTimeout(te,600)}});async function Ae(t,e,n="gpt-3.5-turbo"){if(console.log("[Main Grading] 开始AI判题流程"),console.log("[Main Grading] API URL:",t),console.log("[Main Grading] 模型:",n),console.log("[Main Grading] API Key 长度:",e?e.length:0),_){console.warn("[Main Grading] 判题已在进行中，跳过");return}_=!0,it.style.display="block",Y.style.display="none",jt();try{const r=Pt();console.log("[Main Grading] 收集的数据:",r);const s=h.filter(i=>r[i]&&r[i].trim());if(console.log("[Main Grading] 已填写的词汇:",s),console.log("[Main Grading] 已填写词汇数量:",s.length),s.length===0){console.warn("[Main Grading] 没有填写的词汇"),A("请先填写一些答案","warn"),_=!1,it.style.display="none";return}xt.textContent=`开始判题... (共${s.length}个词)`,m&&j(`判题中 0/${s.length}`,!0);const o=50,l=[];for(let i=0;i<s.length;i+=o)l.push(s.slice(i,i+o));console.log("[Main Grading] 分批处理:",l.length,"个批次");let a=0;const d={};for(let i=0;i<l.length;i++){const c=l[i];console.log(`[Main Grading] 处理第${i+1}批:`,c),xt.textContent=`正在处理第${i+1}/${l.length}批 (${c.length}个词)...`;try{const g=await xe(c,r,t,e,n);console.log(`[Main Grading] 第${i+1}批结果:`,g),Object.assign(d,g),a+=c.length;const u=a/s.length*100;if(Ie.style.width=u+"%",console.log(`[Main Grading] 进度: ${u}% (${a}/${s.length})`),m){const f=Math.round(u);j(`判题中 ${a}/${s.length} (${f}%)`,!0)}i<l.length-1&&(console.log("[Main Grading] 等待1秒避免频率限制"),await new Promise(f=>setTimeout(f,1e3)))}catch(g){console.error(`[Main Grading] 第${i+1}批处理失败:`,g),A(`第${i+1}批处理失败: ${g.message}`,"warn")}}console.log("[Main Grading] 所有批次处理完成，最终结果:",d),Ot(d,s.length),m&&j("判题完成 ✓",!0)}catch(r){console.error("[Main Grading] 判题过程错误:",r),A("判题过程中出现错误: "+r.message,"warn"),m&&j("判题失败",!0)}finally{_=!1,it.style.display="none",console.log("[Main Grading] 判题流程结束")}}async function xe(t,e,n,r,s="gpt-3.5-turbo"){console.log("[Batch Grading] 开始处理批次:",t),console.log("[Batch Grading] 使用模型:",s);const o=be(t,e);console.log("[Batch Grading] 生成的提示词:",o);const l={model:s,messages:[{role:"user",content:o}],temperature:.1};console.log("[Batch Grading] 请求体:",JSON.stringify(l,null,2));const a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`},body:JSON.stringify(l)});if(console.log("[Batch Grading] 响应状态:",a.status,a.statusText),!a.ok){const u=await a.text();throw console.error("[Batch Grading] API错误响应:",u),new Error(`API请求失败: ${a.status} ${a.statusText}: ${u}`)}const d=await a.json();console.log("[Batch Grading] API响应:",d);const i=d?.choices?.[0]?.message;if(!i)throw console.error("[Batch Grading] 响应格式异常:",d),new Error("API响应格式异常");const c=Z(i);console.log("[Batch Grading] AI回复内容:",c);const g=ve(c,t);return console.log("[Batch Grading] 解析结果:",g),g}function Se(t){const e=typeof t=="number"?t:parseFloat(t);if(!Number.isFinite(e))return null;const n=Math.min(Math.max(e,0),1);return Math.round(n*1e3)/1e3}function be(t,e){return`你是一名精通中英文术语的教师，需要判断学生给出的中文翻译与英文术语的语义相似度。请聚焦词义本身，不要贴合特定学科背景或冷僻知识。

请对每个词汇：
1. 给出最标准、最常用的中文翻译（可包含多个词，确保含义准确）。
2. 评估学生答案与标准答案在语义上的相似度，相似度用 0~1 的小数表示：0 代表完全错误，1 代表完全一致。允许保留三位小数。
   - 若学生答案涵盖了主要含义或提供了常见近义词，即使未列出全部释义，也应给予较高分（例如 ≥0.7）。
3. 如有需要，可给出简短说明（10~25个字），解释主要差异或匹配亮点。

在评估时请结合提供的原文语境理解术语的含义，以该语境为准判断学生翻译的准确度。

评分基准示例：
- 学生答案「极点」，标准答案「杆；极点；电极」→ 1.0 分（核心含义完全对应）
- 学生答案「烟」，标准答案「烟雾」→ 0.7 分（传达主要概念，细节略缺）
- 学生答案「平坦的」，标准答案「平原」→ 0.5 分（相关但偏向形容词，需要指出语义差异）

务必只输出 JSON，不要解释。JSON 格式如下：
{
  "英文词汇": {
    "标准答案": "标准中文翻译",
    "相似度": 0.000,
    "说明": "可选，若无则留空字符串"
  }
}

待评估的词汇与学生答案：
${t.map(r=>{const o=(T.get(r)||"（原文未提供语境）").replace(/\s+/g," ").trim(),l=e[r]&&e[r].trim()?e[r].trim():"(空白)";return`- 英文词汇: ${r}
  原文语境: ${o}
  学生翻译: ${l}`}).join(`
`)}`}function ve(t,e){console.log("[Parse Response] 开始解析AI回复:",t),console.log("[Parse Response] 需要解析的词汇:",e);try{const n=t.match(/\{[\s\S]*\}/);if(console.log("[Parse Response] JSON匹配结果:",n?n[0]:"null"),!n)throw console.warn("[Parse Response] 未找到JSON格式，使用fallback解析"),new Error("无法解析AI回复格式");const r=JSON.parse(n[0]);console.log("[Parse Response] JSON解析成功:",r);const s={};return e.forEach(o=>{console.log(`[Parse Response] 处理词汇: ${o}`);const l=r[o]||r[o.trim()]||null;if(l&&typeof l=="object"){const a=l.相似度??l.similarity??l.score,d=Se(typeof a=="string"?parseFloat(a):a),i=(l.标准答案??l.正确答案??"").toString().trim(),c=(l.说明??l.解释??"").toString().trim();s[o]={similarity:typeof d=="number"?d:null,standardAnswer:i||null,explanation:c||null},console.log(`[Parse Response] ${o} 解析成功 - 相似度:`,s[o].similarity,"标准答案:",s[o].standardAnswer,"说明:",s[o].explanation)}else if(typeof l=="string"){const a=l==="正确";s[o]={similarity:a?1:0,standardAnswer:null,explanation:null},console.log(`[Parse Response] ${o} 使用旧格式字符串 - 相似度模拟:`,s[o].similarity)}else console.log(`[Parse Response] ${o} 未在解析结果中找到，使用fallback`),s[o]={similarity:null,standardAnswer:null,explanation:null}}),console.log("[Parse Response] 最终解析结果:",s),s}catch(n){console.error("[Parse Response] JSON解析失败:",n),console.log("[Parse Response] 使用fallback解析方法");const r={};return e.forEach(s=>{const o=s.toLowerCase(),l=t.toLowerCase();r[s]={similarity:l.includes(o)?.5:null,standardAnswer:null,explanation:null},console.log(`[Parse Response] ${s} fallback结果 - 相似度: ${r[s].similarity}`)}),console.log("[Parse Response] Fallback最终结果:",r),r}}function Ot(t,e,n={}){const{suppressToast:r=!1}=n||{};J=t||{},Vt(J);const s=()=>({total:0,strict:0,partial:0,other:0,similaritySum:0,similarityCount:0}),o={overall:s(),new:s(),review:s()},l=(g,u)=>{const f=o[g];f.total+=1,typeof u=="number"&&(f.similaritySum+=u,f.similarityCount+=1),u===null||u<st?f.other+=1:u>=rt?f.strict+=1:f.partial+=1};Object.entries(t).forEach(([g,u])=>{const f=document.querySelector(`[data-term="${g}"]`)?.closest(".item");if(!f)return;f.classList.remove("correct","incorrect","partial");const p=typeof u.similarity=="number"?u.similarity:null,q=(W.get(g)||0)>0?"review":"new";l("overall",p),l(q,p);let D="incorrect";p!==null&&(p>=rt?D="correct":p>=st&&(D="partial")),f.classList.add(D);const nt=f.querySelector(".term");if(!nt)return;let $=nt.querySelector(".grade-indicator");$||($=document.createElement("span"),$.className="grade-indicator",nt.appendChild($)),$.className=`grade-indicator ${D}`,$.textContent=p!==null?p.toFixed(2):"—",$.title="语义相似度 (0-1)";let b=f.querySelector(".grading-details");if(b||(b=document.createElement("div"),b.className="grading-details",f.appendChild(b)),b.innerHTML="",p!==null){const x=document.createElement("div"),E=document.createElement("strong");E.textContent="相似度:",x.appendChild(E),x.appendChild(document.createTextNode(" "+p.toFixed(2))),b.appendChild(x)}if(u.standardAnswer){const x=document.createElement("div"),E=document.createElement("strong");E.textContent="标准答案:",x.appendChild(E),x.appendChild(document.createTextNode(" "+u.standardAnswer)),b.appendChild(x)}if(u.explanation){const x=document.createElement("div"),E=document.createElement("strong");E.textContent="说明:",x.appendChild(E),x.appendChild(document.createTextNode(" "+u.explanation)),b.appendChild(x)}b.hasChildNodes()||b.remove()});const a=rt.toFixed(2),d=st.toFixed(2),i=o.overall.similarityCount?o.overall.similaritySum/o.overall.similarityCount:0,c=(g,u)=>{if(!u.total)return`${g}：0 个`;const f=u.similarityCount?(u.similaritySum/u.similarityCount).toFixed(2):"—";return`${g}：${u.total} 个（平均 ${f} | 高匹配 ${u.strict} | 中匹配 ${u.partial}）`};ut.innerHTML=`
    <div>判题完成！</div>
    <div class="score-line">
      <span>平均相似度：<strong>${i.toFixed(2)}</strong></span>
      <span>高匹配(≥${a}): <strong>${o.overall.strict}</strong></span>
      <span>中等匹配(≥${d}): <strong>${o.overall.partial}</strong></span>
      <span>总词数: <strong>${e}</strong></span>
    </div>
    <div class="score-line">${c("新词",o.new)}</div>
    <div class="score-line">${c("复习词",o.review)}</div>
  `,Y.style.display="block",B.style.display="none",r||A(`判题完成！平均相似度 ${i.toFixed(2)}`,"ok")}function jt(){J={},document.querySelectorAll(".item").forEach(t=>{t.classList.remove("correct","incorrect","partial");const e=t.querySelector(".grade-indicator");e&&e.remove();const n=t.querySelector(".grading-details");n&&n.remove()})}async function Ee(t,e,n="gpt-3.5-turbo"){console.log("[AI Identity] 开始检测AI身份"),console.log("[AI Identity] API URL:",t),console.log("[AI Identity] 模型:",n),console.log("[AI Identity] API Key 长度:",e?e.length:0);const r={model:n,messages:[{role:"user",content:"你好，请详细介绍一下你自己，包括你的名称、版本、主要功能和特色。"}],temperature:.1,max_tokens:200};console.log("[AI Identity] 请求体:",JSON.stringify(r,null,2));const s=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(r)});if(console.log("[AI Identity] 响应状态:",s.status,s.statusText),!s.ok){const d=await s.text();throw console.error("[AI Identity] API错误响应:",d),new Error(`${s.status} ${s.statusText}: ${d}`)}const o=await s.json();console.log("[AI Identity] API响应:",o);const l=o?.choices?.[0]?.message;if(!l)throw console.error("[AI Identity] 响应格式异常:",o),new Error("API响应格式异常");const a=Z(l);if(!a)throw console.error("[AI Identity] 未获得文本回复:",l),new Error("AI未返回文本信息");return console.log("[AI Identity] AI回复:",a),a}async function $e(t){const e=Number(t);if(!Number.isInteger(e)||e<=0){I(`无法识别的历史记录编号：${t}`,"warn");return}const n=tt();if(!n){I("请先配置服务器地址再加载历史记录。","warn");return}const r=`${n.replace(/\/$/,"")}/api/sessions/${e}`;I(`正在加载历史记录 #${e}…`,"info");try{const s=await fetch(r,{headers:{Accept:"application/json"}});if(!s.ok){const c=await s.text();throw new Error(`HTTP ${s.status} ${s.statusText}: ${c}`)}const o=await s.json(),l=o?.session||{},a=Array.isArray(o?.results)?o.results:[],d=typeof l.article=="string"?l.article:"";typeof M<"u"&&(M=d),G&&(G.value=d),It(d||"",[]),et();const i={};if(a.forEach(c=>{if(!c||typeof c.term!="string")return;const g=c.term.trim();if(!g)return;const u=typeof c.similarity=="number"?c.similarity:Number(c.similarity),f=c.standard_answer||c.standardAnswer||null,p=c.explanation||null;i[g]={similarity:Number.isFinite(u)?u:null,standardAnswer:f,explanation:p},c.context&&T&&T.set(g,c.context)}),Object.keys(i).length?Ot(i,l.total_terms||a.length,{suppressToast:!0}):(jt(),Y.style.display="none"),ut){const c=l.submitted_at?new Date(l.submitted_at):null,g=typeof l.avg_similarity=="number"?l.avg_similarity:Number(l.avg_similarity),u=[];c&&!Number.isNaN(c.getTime())&&u.push(`提交时间：${c.toLocaleString()}`),u.push(`总词数：${l.total_terms??a.length}`),Number.isFinite(g)&&u.push(`平均相似度：${g.toFixed(2)}`),u.push(`正确 / 部分正确 / 错误：${l.correct_terms??0} / ${l.partial_terms??0} / ${l.incorrect_terms??0}`),ut.insertAdjacentHTML("beforeend",`<div class="score-line history-note">${u.join(" ｜ ")}</div>`)}Y.style.display="block",B.style.display="none",I(`已加载历史记录 #${e}，如需重新练习可直接编辑文章。`,"ok"),document.body.classList.add("replay-mode")}catch(s){console.error("[History Replay] 加载历史记录失败:",s),I(`加载历史记录失败：${s.message}`,"warn"),A("加载历史记录失败："+s.message,"warn")}}const St=new URLSearchParams(window.location.search).get("session");St&&$e(St);

import{e as T,f as lt}from"./chunks/html.js";function Rt({listElement:t,filterInput:e,scoreCache:n,makeId:o}){function r(a){if(Array.isArray(a))for(const d of a){const i=document.getElementById(o(d));if(!i)continue;const c=i.closest(".item");if(!c)continue;const u=i.value&&i.value.trim().length>0;c.classList.toggle("filled",u)}}function s(){if(!t)return;t.querySelectorAll(".score-badge").forEach(d=>{const i=d.dataset.termScore,c=i&&n?.has(i)?n.get(i):null;typeof c=="number"?(d.textContent=c.toFixed(2),d.classList.add("score-known")):(d.textContent="—",d.classList.remove("score-known"))})}function l(a){if(!t||!Array.isArray(a))return;const d=e?.value?.trim().toLowerCase(),i=[];for(const c of a){if(d&&!c.toLowerCase().includes(d))continue;const u=o(c),g=n?.has(c)?n.get(c):null,f=typeof g=="number"?g.toFixed(2):"—";i.push(`
        <div class="item">
          <div class="term" data-term="${T(c)}">
            <span>${T(c)}</span>
            <span class="score-badge" data-term-score="${T(c)}">${f}</span>
            <span class="jump" data-term="${T(c)}">跳到文中</span>
          </div>
          <input aria-label="${T(c)} 中文意思" placeholder="中文意思…" id="${T(u)}" data-term="${T(c)}" />
        </div>
      `)}t.innerHTML=i.join(""),r(a),s()}return{buildList:l,updateFilledState:r,updateScoreBadges:s}}function Nt(t={}){const e={...t},n=new Map;function o(a){return e[a]}function r(a,d){const i=e[a];if(e[a]=d,i===d)return d;const c=n.get(a);if(c)for(const u of c)try{u(d,{...e})}catch(g){console.error("[Store] listener error",g)}return d}function s(a,d){if(typeof d!="function")return()=>{};const i=n.get(a);return i?i.add(d):n.set(a,new Set([d])),()=>{const c=n.get(a);c&&(c.delete(d),c.size===0&&n.delete(a))}}function l(){return{...e}}return{get:o,set:r,subscribe:s,snapshot:l}}const J=Nt({vocabs:[],serverScores:[],gradingResults:{},articleMarkdown:""}),It=t=>J.set("vocabs",Array.isArray(t)?[...t]:[]),Pt=t=>J.set("serverScores",Array.isArray(t)?[...t]:[]),Gt=t=>J.set("gradingResults",t||{}),Ot=t=>J.set("articleMarkdown",typeof t=="string"?t:"");let y=[];const F=new Map,dt=new Map,M=new Map;let B="";const z=document.getElementById("list"),At=document.getElementById("filter"),ut=document.getElementById("edit-mode-btn"),gt=document.getElementById("view-mode-btn"),xt=document.getElementById("edit-section"),bt=document.getElementById("view-section"),P=document.getElementById("article-editor"),jt=document.getElementById("save-article-btn"),N=document.getElementById("editor-status"),rt=document.getElementById("article-content"),st=document.getElementById("generator-words"),x=document.getElementById("generate-article-btn"),Q=document.getElementById("generator-status"),m=document.getElementById("start-grade"),h=document.getElementById("sync-server"),R=document.getElementById("sync-status"),tt=document.getElementById("server-scores"),_=document.getElementById("score-api-url"),St=document.getElementById("api-url"),Et=document.getElementById("api-key"),vt=document.getElementById("ai-model"),_t=document.getElementById("practiced-count"),Ft=document.getElementById("total-count"),Vt=document.getElementById("mastery-threshold"),C=document.getElementById("auto-fill-words"),at=new Map,L=Rt({listElement:z,filterInput:At,scoreCache:at,makeId:H});J.subscribe("vocabs",t=>{y=Array.isArray(t)?[...t]:[],L.buildList(y)});h&&!h.dataset.originalText&&(h.dataset.originalText=h.textContent);Y([]);w("","info");Lt({quiet:!0});const Jt=220,U=.85,et=.6;let V={};function H(t){return"term-"+t.toLowerCase().replace(/[^a-z0-9]+/g,"-")}function $t(t,e){const n=typeof t=="string"?t.trim():"";if(!n)return;const o=typeof e=="string"&&e.trim()?e.trim():n;F.set(o.toLowerCase(),n),F.set(n.toLowerCase(),n),dt.set(n,o)}function Ht(t=[]){if(F.clear(),dt.clear(),!!Array.isArray(t))for(const e of t)!e||typeof e!="object"||$t(e.original,e.used)}function ft(t){if(!t)return null;const e=t.trim().toLowerCase();return F.has(e)?F.get(e):y.find(o=>o.toLowerCase()===e)||null}function Ut(t){if(!t)return null;const e=t.trim();return dt.get(e)||e}function it(t){const e=Ut(t)||t,n="t-"+e.toLowerCase().replace(/[^a-z0-9]+/g,"-"),o=document.getElementById(n);if(o){o.scrollIntoView({behavior:"smooth",block:"center"}),yt(o);return}const r=document.querySelectorAll("#article-content strong"),s=e.toLowerCase();for(const l of r){const a=l.textContent.trim().toLowerCase();if(a===s||a.includes(s)){l.scrollIntoView({behavior:"smooth",block:"center"}),yt(l);return}}alert("在文章中未找到该词："+t)}function yt(t){t.style.outline="2px solid var(--accent-2)",t.style.boxShadow="0 0 0 4px rgba(137,220,235,.25)",setTimeout(()=>{t.style.outline="",t.style.boxShadow=""},1500)}function qt(t){if(!t)return[];const e=t.split(/[\n,，、；;]+/),n=new Set,o=[];for(const r of e){const s=r.trim();s&&!n.has(s)&&(n.add(s),o.push(s))}return o}function Dt(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function K(t){if(!t)return"";const{content:e,text:n,tool_calls:o}=t,r=a=>a?typeof a=="string"?a:typeof a=="number"||typeof a=="boolean"?String(a):typeof a=="object"?typeof a.text=="string"?a.text:Array.isArray(a.text)?a.text.map(r).join(""):a.type==="text"&&typeof a.value=="string"?a.value:a.type==="text"&&typeof a.data=="string"?a.data:(a.type==="tool_call"&&a.function?.arguments,""):"":"";let s=[];if(typeof e=="string"?s.push(e):Array.isArray(e)?s.push(e.map(r).join("")):e&&typeof e=="object"&&(typeof e.text=="string"?s.push(e.text):Array.isArray(e.text)&&s.push(e.text.map(r).join(""))),typeof n=="string"?s.push(n):Array.isArray(n)&&s.push(n.map(r).join("")),(!s.length||s.join("").trim()==="")&&Array.isArray(o))for(const a of o)a?.function?.result&&typeof a.function.result=="string"&&s.push(a.function.result);return s.join(`
`).trim()}function zt(t){const e=Dt(t.trim());return e?/\s/.test(t)?new RegExp(e.replace(/\s+/g,"\\s+"),"i"):new RegExp(`\\b${e}\\b`,"i"):null}function W(t,e,{trim:n=!0}={}){if(!t)return;const o=()=>{const r=n?t.value.trim():t.value;r?localStorage.setItem(e,r):localStorage.removeItem(e)};t.addEventListener("change",o),t.addEventListener("blur",o)}function Kt(t,e,n=[]){const o=t.replace(/\*\*/g,""),r=new Set,s=/\*\*(.*?)\*\*/g;let l;for(;(l=s.exec(t))!==null;){const i=l[1]?.trim().toLowerCase();i&&r.add(i)}const a=new Map;if(Array.isArray(n))for(const i of n){if(!i||typeof i!="object")continue;const c=typeof i.original=="string"?i.original.trim().toLowerCase():"",u=typeof i.used=="string"?i.used.trim().toLowerCase():"";c&&u&&a.set(c,u),c&&!u&&a.set(c,c)}const d=[];for(const i of e){const c=typeof i=="string"?i.trim().toLowerCase():"";if(!c||r.has(c))continue;const u=a.get(c);if(u&&r.has(u))continue;const g=zt(i);g&&(g.test(o)||d.push(i))}return d}function p(t,e="info"){if(!Q)return;const n={info:"var(--muted)",ok:"var(--ok)",warn:"var(--warn)"};Q.textContent=t||"",Q.style.color=n[e]||n.info}W(St,"ai-api-url");W(Et,"ai-api-key");W(vt,"ai-model");W(_,"score-api-url");function O(t,e){m&&(typeof t=="string"&&(m.textContent=t),m.disabled=e)}function Wt(){m&&(m.disabled=!1,m.textContent=m.dataset.originalText||"📝 开始判题")}function w(t,e="info"){R&&(R.classList.remove("ok","warn"),e==="ok"&&R.classList.add("ok"),e==="warn"&&R.classList.add("warn"),e!=="ok"&&e!=="warn"&&R.classList.remove("ok","warn"),R.textContent=t||"")}function Y(t){if(tt){if(at.clear(),Pt(Array.isArray(t)?t:[]),Array.isArray(t)){for(const e of t)if(e&&typeof e.term=="string"){const n=Number(e.score);at.set(e.term.trim(),Number.isFinite(n)?n:null)}}tt.style.display="none",tt.innerHTML="",L.updateScoreBadges()}}function X(){const t=_?.value?.trim();if(t)return t;const e=localStorage.getItem("score-api-url");return e||"http://localhost:4000"}function Yt(){const t=[];if(!V)return t;for(const[e,n]of Object.entries(V))if(n&&typeof n.similarity=="number"){const o=M.get(e)||"";t.push({term:e,similarity:n.similarity,context:o||null,standard_answer:n.standardAnswer?String(n.standardAnswer):null,explanation:n.explanation?String(n.explanation):null})}return t}function Xt(){return typeof B=="string"&&B.trim()?B.trim():typeof P?.value=="string"?P.value.trim():""}function Zt(){const t=Number(_t?.value??0),e=Number(Ft?.value??0),n=Number(Vt?.value??1),o=Number.isFinite(t)?Math.max(0,Math.min(50,Math.round(t))):0,r=Number.isFinite(e)?Math.max(0,Math.min(50,Math.round(e))):0,s=Number.isFinite(n)?n:1;return{practiced:o,total:r,masteryThreshold:s}}async function Lt({quiet:t=!1}={}){try{const n=X().replace(/\/$/,"")+"/api/word-scores",o=await lt(n);Array.isArray(o?.scores)?(Y(o.scores),t||w(`已获取服务器记录（${o.scores.length} 个词）`,"ok")):t||w("服务器未返回有效数据","warn")}catch(e){t||w(`无法获取服务器分数：${e.message}`,"warn")}}async function Qt(){if(!C)return;const{practiced:t,total:e,masteryThreshold:n}=Zt();if(!e){p("请设置总词数（至少 1）","warn");return}if(t>e){p("练习过的词数不能超过总词数","warn");return}const o=X(),r=`${o.replace(/\/$/,"")}/api/word-suggestions?practiced=${t}&total=${e}&threshold=${encodeURIComponent(n)}`;C.disabled=!0,C.textContent="获取中…",p("正在向服务器请求推荐词汇…","info");try{const s=await lt(r),l=Array.isArray(s?.practiced)?s.practiced.map(i=>i.term).filter(Boolean):[],a=Array.isArray(s?.fresh)?s.fresh.map(i=>i.term).filter(Boolean):[];if(!l.length&&!a.length){p("未获取到符合条件的词汇，请调整参数。","warn");return}const d=[];l.length&&d.push(l.join(", ")),a.length&&d.push(a.join(", ")),st.value=d.join(`

`),p(`已填入 ${l.length} 个练习词与 ${a.length} 个新词`,"ok"),localStorage.setItem("score-api-url",o)}catch(s){console.error("[Auto Fill Words] 获取失败:",s),p(`获取推荐词汇失败：${s.message}`,"warn")}finally{C.disabled=!1,C.textContent="🎯 自动取词"}}function mt(){const t=St?.value?.trim(),e=Et?.value?.trim(),n=vt?.value?.trim(),o=localStorage.getItem("ai-api-url"),r=localStorage.getItem("ai-api-key"),s=localStorage.getItem("ai-model"),l=(t||o||"").trim(),a=(e||r||"").trim(),d=(n||s||"gpt-3.5-turbo").trim()||"gpt-3.5-turbo";return t!==void 0&&(t?localStorage.setItem("ai-api-url",t):localStorage.removeItem("ai-api-url")),e!==void 0&&(e?localStorage.setItem("ai-api-key",e):localStorage.removeItem("ai-api-key")),n!==void 0&&(n?localStorage.setItem("ai-model",n):localStorage.removeItem("ai-model")),{apiUrl:l,apiKey:a,model:d}}function te(t){const e=[...t];for(let n=e.length-1;n>0;n--){const o=Math.floor(Math.random()*(n+1));[e[n],e[o]]=[e[o],e[n]]}return e}function ee(t){return`请为英语学习者写一篇英文短文，使用 Markdown 段落格式（可自行分段，但不要添加标题、前言或代码块）。严格遵守下列规则：

**A. 标注与频次**

* 仅对目标词加粗，形式为 **word**；除目标词外不得使用粗体。
* 每个目标词至少出现一次；可按语境变化词形，并对变化后的词形加粗。
* **每句最多出现一个目标词**；禁止在同一句用并列（如 “X and Y” 或 “X, Y, and Z”）放入多个目标词。

**B. 语义分散与防“扎堆”**

* **同义、近义、反义、同词根或同一语义场的目标词，彼此之间至少间隔 ≥2 句**；不得出现在相邻句或同一句。
* 若两词常作并列形容或可互换使用，只在不同句中出现，且置于不同话题或功能（如一个作描述，另一个用于行动或结果）。

**C. 连贯性与结构（重点）**

* 先在内部拟定“三段式叙事”但**不输出大纲**：
  1）开端：交代时间、地点、人物与目标；
  2）发展：行动、阻碍与抉择；
  3）结尾：结果或反思，呼应目标。
* 全文保持**同一组人物/地点/目标**贯穿；不要无提示地更换场景或人物。
* **句际逻辑**清晰：每句与上一句构成时间顺序、因果、递进或转折关系。必要时在句首使用 then, later, because, however, therefore, eventually 等连接词（适量使用）。
* 禁止清单式、口号式或与主线无关的跳转；避免模板化重复句式。

**D. 语境暗示，禁止定义式写法**

* 禁止 “**X** is/means/refers to/also called/defined as …” 等定义句；禁止在目标词所在句用括号、破折号、同位语或 “i.e./such as/for example” 给出直白解释或同义替换。
* 不给出中文释义或直译提示词；通过动作、结果、感受、对话或情境**间接**表达含义。

**E. 篇幅与段落**

* 句子数应 ≥ 目标词数量，优先采用“一词一句”。

**F. 输出**

* **仅输出文章正文**，保留 Markdown 段落与粗体标记；不要添加任何额外说明、标题、列表或 JSON。

目标词汇（顺序随机）：

${t.map((n,o)=>`${o+1}. ${n}`).join(`
`)}`}function ne(t,e){const n=e.map((o,r)=>`${r+1}. ${o}`).join(`
`);return`请阅读下方的英文文章，并根据提供的目标词汇列表，指出文章中每个词汇的实际写法。

输出一个 JSON 对象，格式如下：
{
  "pairs": [
    {"original": "目标词汇", "used": "文章中的实际写法（去掉**，若未出现则留空字符串）"}
  ]
}

要求：
- original 必须与提供的目标词汇完全一致；
- used 为文章中出现的具体形式（保留大小写/单复数等变化，但去掉任何 Markdown ** 标记）；
- 如果某个词未在文章中出现，将 used 设为空字符串。

英文文章：
"""
${t}
"""

目标词汇列表：
${n}`}function nt(t){return typeof t!="string"?"":t.replace(/\*\*/g,"").trim()}function oe(t,e){const n=(e||[]).map(i=>({original:i,used:i}));if(!t)return n;let o=t.trim();if(!o)return n;let r=null;const s=o.match(/```(?:json)?([\s\S]*?)```/i);if(s)r=s[1].trim();else{const i=o.match(/\{[\s\S]*\}/);i&&(r=i[0])}let l=[];if(r)try{const i=JSON.parse(r);l=(Array.isArray(i?.pairs)?i.pairs:Array.isArray(i)?i:[]).map(u=>{if(!u||typeof u!="object")return null;const g=typeof u.original=="string"?u.original.trim():"",f=nt(u.used??"");return g?{original:g,used:f||""}:null}).filter(Boolean)}catch(i){console.warn("[Variant Mapping] JSON解析失败，尝试解析纯文本格式",i),l=[]}if(!l.length){const i=o.split(/\n+/).map(c=>c.trim()).filter(Boolean);for(const c of i){const u=c.match(/^(.+?)\s*(?:=>|->|：|:|=)\s*(.+)$/);if(!u)continue;const g=u[1].trim(),f=nt(u[2]);g&&l.push({original:g,used:f})}}const a=new Map;for(const i of l){const c=typeof i.original=="string"?i.original.trim():"";if(!c)continue;const u=c.toLowerCase(),g=nt(i.used||c);a.has(u)||a.set(u,{original:c,used:g||c})}const d=[];for(const i of e||[]){const c=i.trim().toLowerCase(),u=a.get(c),g=u?u.used:i;d.push({original:i,used:g})}return d}async function re(t,e,n,o,r){const s=ne(o,r),l={model:n,messages:[{role:"system",content:"You are an assistant that extracts vocabulary mappings and responds with concise JSON."},{role:"user",content:s}],temperature:0,max_tokens:3e3};console.log("[Variant Mapping] 请求体:",JSON.stringify(l,null,2));const a=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(l)});if(console.log("[Variant Mapping] 响应状态:",a.status,a.statusText),!a.ok){const u=await a.text();throw console.error("[Variant Mapping] API错误响应:",u),new Error(`词形映射请求失败: ${a.status} ${a.statusText}: ${u}`)}const d=await a.json();console.log("[Variant Mapping] API响应:",d);const i=d?.choices?.[0]?.message;if(!i)throw new Error("词形映射响应格式异常");const c=K(i);return console.log("[Variant Mapping] AI回复:",c),oe(c,r)}async function se(){if(!x)return;const t=qt(st?.value||"");if(!t.length){p("请至少输入一个目标词汇","warn"),st?.focus();return}const{apiUrl:e,apiKey:n,model:o}=mt();if(!e||!n){p("请先在右侧配置AI API地址与Key","warn");return}const r=x.dataset.originalText||x.textContent;try{x.disabled=!0,x.dataset.originalText=r,x.textContent="生成中…",p("正在请求AI生成文章…","info");const s=te(t),l=ee(s),a={model:o,messages:[{role:"system",content:"You are an expert science writer who produces fluent, engaging English articles in Markdown without extra commentary."},{role:"user",content:l}],temperature:.65,top_p:.9,max_tokens:Math.min(1200,Math.round(Jt*4.2))};console.log("[Article Generator] 请求体:",JSON.stringify(a,null,2));const d=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(a)});if(!d.ok){const v=await d.text();throw new Error(`API请求失败: ${d.status} ${d.statusText} | ${v}`)}const i=await d.json();console.log("[Article Generator] API响应:",i);const c=i?.choices?.[0]?.message;if(!c)throw new Error("AI未返回文章内容");const u=K(c);if(!u)throw new Error("AI未返回文章内容");P.value=u.trim();let g,f=!1;try{if(p("文章生成成功，正在分析词形映射…","info"),g=await re(e,n,o,u,t),!Array.isArray(g)||!g.length)throw new Error("未获得有效的词形映射")}catch(v){console.error("[Article Generator] 词形映射失败:",v),g=t.map(S=>({original:S,used:S})),p("文章生成完成，但词形映射失败，已使用原始词汇。","warn"),I("词形映射失败，已使用原始词汇","warn"),f=!0}console.log("[Article Generator] 最终词形映射:",g),pt(u,g),Z();const b=Kt(u,t,g);if(b.length){const v=`⚠️ 已生成文章，但缺少 ${b.length} 个词：${b.join("，")}`;p(v,"warn"),I("生成完成，但存在缺失词汇，请手动补充。","warn")}else f||(p("AI文章生成完成，词汇与词形均已覆盖 ✓","ok"),I("文章生成成功并包含全部目标词汇！","ok"));await Lt({quiet:!0})}catch(s){console.error("[Article Generator] 生成文章失败:",s),p(`生成失败：${s.message}`,"warn")}finally{x.disabled=!1,x.textContent=x.dataset.originalText||"✨ AI生成文章"}}function pt(t,e=[]){try{B=typeof t=="string"?t:"",Ot(B),Ht(e);const n=ae(t);rt.innerHTML=n,ie(t),ce(),L.buildList(y),N.textContent="文章保存成功！",N.style.color="var(--ok)"}catch(n){N.textContent="处理文章内容时出错: "+n.message,N.style.color="var(--warn)"}}function ae(t){return t.split(`

`).map(o=>`<p>${o.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>")}</p>`).join(`
`)}function ie(t){const e=/\*\*(.*?)\*\*/g,n=[],o=new Set;let r;for(;(r=e.exec(t))!==null;){const s=r[1]?.trim();if(!s)continue;const l=ft(s)||s;$t(l,s),o.has(l)||(o.add(l),n.push(l))}It(n)}function ce(){if(M.clear(),!rt)return;rt.querySelectorAll("p").forEach(e=>{const n=e.textContent?e.textContent.replace(/\s+/g," ").trim():"";if(!n)return;e.querySelectorAll("strong").forEach(r=>{const s=r.textContent?r.textContent.trim():"";if(!s)return;const l=ft(s)||s;if(!l||M.has(l))return;const a=le(n,s)||n;M.set(l,a)})})}function le(t,e){if(!t||!e)return"";const n=t.replace(/\s+/g," ").trim(),o=e.trim().toLowerCase(),r=n.match(/[^。！？!?.]+[。！？!?.]?/g)||[n];for(const s of r)if(s.toLowerCase().includes(o))return s.trim();return n}function de(){ut.classList.add("active"),gt.classList.remove("active"),xt.style.display="block",bt.style.display="none"}function Z(){ut.classList.remove("active"),gt.classList.add("active"),xt.style.display="none",bt.style.display="block"}ut.addEventListener("click",de);gt.addEventListener("click",Z);jt.addEventListener("click",()=>{const t=P.value;t.trim()?(pt(t),Z()):(N.textContent="请输入文章内容",N.style.color="var(--warn)")});x&&x.addEventListener("click",se);C&&C.addEventListener("click",t=>{t.preventDefault(),Qt()});h&&h.addEventListener("click",async()=>{const t=Yt();if(!t.length){w("请先完成AI判题后再同步。","warn"),I("没有可同步的判题分数","warn");return}const e=X(),n=e.replace(/\/$/,"")+"/api/word-scores",o=Xt(),r=h.dataset.originalText||h.textContent;h.dataset.originalText=r,h.disabled=!0,h.textContent="同步中…",w("正在同步判题结果到服务器…","info");try{const s=await lt(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({results:t,article:o})}),l=Array.isArray(s?.scores)?s.scores:[];Y(l);const a=s?.updated??t.length,d=s?.session_id,i=d?`（历史记录 #${d} 已生成）`:"";w(`同步成功，已更新 ${a} 个词汇${i}`,"ok"),I(d?`同步完成！历史记录 #${d}`:"服务器词表已更新 ✓","ok"),localStorage.setItem("score-api-url",e)}catch(s){console.error("[Sync Scores] 同步失败:",s),w(`同步失败：${s.message}`,"warn"),I("同步失败："+s.message,"warn")}finally{h.disabled=!1,h.textContent=h.dataset.originalText||"⬆️ 同步到服务器"}});function ue(t){const e=document.getElementById(H(t));if(e){e.scrollIntoView({behavior:"smooth",block:"center"}),e.focus();const n=e.closest(".item");n&&(n.style.outline="2px solid var(--accent-2)",n.style.boxShadow="0 0 0 4px rgba(137,220,235,.25)",setTimeout(()=>{n.style.outline="",n.style.boxShadow=""},1500))}}It(y);z.addEventListener("click",t=>{const e=t.target;if(e.classList.contains("jump"))it(e.dataset.term);else if(e.classList.contains("term")||e.parentElement.classList.contains("term")){const n=e.dataset.term||e.parentElement.dataset.term;n&&it(n)}});At.addEventListener("input",()=>L.buildList(y));z.addEventListener("focus",t=>{t.target.tagName==="INPUT"&&t.target.dataset.term&&it(t.target.dataset.term)},!0);document.getElementById("article-content").addEventListener("click",t=>{if(t.target.tagName==="STRONG"){const e=t.target.textContent.trim(),n=ft(e);n&&y.includes(n)&&ue(n)}});const Tt="geo_vocab_answers_v1";function Ct(){const t={};for(const e of y){const n=document.getElementById(H(e));t[e]=n&&n.value||""}return t}function ge(t){if(t){for(const e of y){const n=document.getElementById(H(e));n&&e in t&&(n.value=t[e]||"")}L.updateFilledState(y)}}function Mt(){try{const t=Ct();localStorage.setItem(Tt,JSON.stringify(t)),L.updateFilledState(y)}catch(t){console.warn("[Persist Answers] 保存失败:",t)}}let q=null;function fe(){q&&clearTimeout(q),q=setTimeout(()=>{q=null,Mt()},300)}try{const t=JSON.parse(localStorage.getItem(Tt)||"null");ge(t)}catch(t){console.warn("[Persist Answers] 恢复缓存失败:",t)}z.addEventListener("input",t=>{const e=t.target;e instanceof HTMLInputElement&&e.dataset.term&&(fe(),L.updateFilledState(y))});document.getElementById("clear").addEventListener("click",()=>{for(const t of y){const e=document.getElementById(H(t));e&&(e.value="")}Mt(),L.updateFilledState(y),I("已清空输入","warn")});function I(t,e){const n=document.createElement("div");n.textContent=t,n.style.position="fixed",n.style.right="18px",n.style.bottom="18px",n.style.background="rgba(10,15,30,.95)",n.style.border="1px solid rgba(122,162,247,.3)",n.style.color=e==="ok"?"var(--ok)":e==="warn"?"var(--warn)":"var(--text)",n.style.padding="10px 12px",n.style.borderRadius="10px",n.style.boxShadow="0 6px 18px var(--shadow)",document.body.appendChild(n),setTimeout(()=>n.remove(),2200)}let j=!1;const k=document.getElementById("ai-config"),D=document.getElementById("ai-results"),ot=document.getElementById("ai-progress"),me=document.getElementById("progress-fill"),ht=document.getElementById("progress-text"),ct=document.getElementById("score-summary"),G=document.getElementById("ai-identity-check");document.getElementById("ai-grade").addEventListener("click",async()=>{if(k.style.display==="none"){k.style.display="block",p("");const t=localStorage.getItem("ai-api-url"),e=localStorage.getItem("ai-api-key"),n=localStorage.getItem("ai-model")||"gpt-3.5-turbo";t&&(document.getElementById("api-url").value=t),e&&(document.getElementById("api-key").value=e),document.getElementById("ai-model").value=n;const o=localStorage.getItem("score-api-url");_&&(_.value=o||_.value||"http://localhost:4000"),Y([]),w("同步后将显示本次提交的词汇成绩","info")}else k.style.display="none"});G.addEventListener("click",async()=>{const{apiUrl:t,apiKey:e,model:n}=mt();if(!t||!e){alert(`请先配置API地址和Key！

点击"🤖 AI工具箱"按钮进行配置。`);return}G.textContent="🔍 检测中...",G.disabled=!0;try{const o=await Ae(t,e,n);alert(`AI身份信息：

${o}`)}catch(o){alert(`AI身份检测失败：

${o.message}`)}finally{G.textContent="🔍 检测AI身份",G.disabled=!1}});document.getElementById("cancel-grade").addEventListener("click",()=>{k.style.display="none",j=!1});m&&m.addEventListener("click",async()=>{const{apiUrl:t,apiKey:e,model:n}=mt();if(!t||!e){k.style.display="block",I("请填写API地址和Key","warn");return}const o=m.dataset.originalText||m.textContent;m.dataset.originalText=o,O("判题准备中…",!0);try{await pe(t,e,n)}finally{setTimeout(Wt,600)}});async function pe(t,e,n="gpt-3.5-turbo"){if(console.log("[Main Grading] 开始AI判题流程"),console.log("[Main Grading] API URL:",t),console.log("[Main Grading] 模型:",n),console.log("[Main Grading] API Key 长度:",e?e.length:0),j){console.warn("[Main Grading] 判题已在进行中，跳过");return}j=!0,ot.style.display="block",D.style.display="none",kt();try{const o=Ct();console.log("[Main Grading] 收集的数据:",o);const r=y.filter(i=>o[i]&&o[i].trim());if(console.log("[Main Grading] 已填写的词汇:",r),console.log("[Main Grading] 已填写词汇数量:",r.length),r.length===0){console.warn("[Main Grading] 没有填写的词汇"),I("请先填写一些答案","warn"),j=!1,ot.style.display="none";return}ht.textContent=`开始判题... (共${r.length}个词)`,m&&O(`判题中 0/${r.length}`,!0);const s=50,l=[];for(let i=0;i<r.length;i+=s)l.push(r.slice(i,i+s));console.log("[Main Grading] 分批处理:",l.length,"个批次");let a=0;const d={};for(let i=0;i<l.length;i++){const c=l[i];console.log(`[Main Grading] 处理第${i+1}批:`,c),ht.textContent=`正在处理第${i+1}/${l.length}批 (${c.length}个词)...`;try{const u=await ye(c,o,t,e,n);console.log(`[Main Grading] 第${i+1}批结果:`,u),Object.assign(d,u),a+=c.length;const g=a/r.length*100;if(me.style.width=g+"%",console.log(`[Main Grading] 进度: ${g}% (${a}/${r.length})`),m){const f=Math.round(g);O(`判题中 ${a}/${r.length} (${f}%)`,!0)}i<l.length-1&&(console.log("[Main Grading] 等待1秒避免频率限制"),await new Promise(f=>setTimeout(f,1e3)))}catch(u){console.error(`[Main Grading] 第${i+1}批处理失败:`,u),I(`第${i+1}批处理失败: ${u.message}`,"warn")}}console.log("[Main Grading] 所有批次处理完成，最终结果:",d),Bt(d,r.length),m&&O("判题完成 ✓",!0)}catch(o){console.error("[Main Grading] 判题过程错误:",o),I("判题过程中出现错误: "+o.message,"warn"),m&&O("判题失败",!0)}finally{j=!1,ot.style.display="none",console.log("[Main Grading] 判题流程结束")}}async function ye(t,e,n,o,r="gpt-3.5-turbo"){console.log("[Batch Grading] 开始处理批次:",t),console.log("[Batch Grading] 使用模型:",r);const s=we(t,e);console.log("[Batch Grading] 生成的提示词:",s);const l={model:r,messages:[{role:"user",content:s}],temperature:.1};console.log("[Batch Grading] 请求体:",JSON.stringify(l,null,2));const a=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(l)});if(console.log("[Batch Grading] 响应状态:",a.status,a.statusText),!a.ok){const g=await a.text();throw console.error("[Batch Grading] API错误响应:",g),new Error(`API请求失败: ${a.status} ${a.statusText}: ${g}`)}const d=await a.json();console.log("[Batch Grading] API响应:",d);const i=d?.choices?.[0]?.message;if(!i)throw console.error("[Batch Grading] 响应格式异常:",d),new Error("API响应格式异常");const c=K(i);console.log("[Batch Grading] AI回复内容:",c);const u=Ie(c,t);return console.log("[Batch Grading] 解析结果:",u),u}function he(t){const e=typeof t=="number"?t:parseFloat(t);if(!Number.isFinite(e))return null;const n=Math.min(Math.max(e,0),1);return Math.round(n*1e3)/1e3}function we(t,e){return`你是一名精通中英文术语的教师，需要判断学生给出的中文翻译与英文术语的语义相似度。请聚焦词义本身，不要贴合特定学科背景或冷僻知识。

请对每个词汇：
1. 给出最标准、最常用的中文翻译（可包含多个词，确保含义准确）。
2. 评估学生答案与标准答案在语义上的相似度，相似度用 0~1 的小数表示：0 代表完全错误，1 代表完全一致。允许保留三位小数。
   - 若学生答案涵盖了主要含义或提供了常见近义词，即使未列出全部释义，也应给予较高分（例如 ≥0.7）。
3. 如有需要，可给出简短说明（10~25个字），解释主要差异或匹配亮点。

在评估时请结合提供的原文语境理解术语的含义，以该语境为准判断学生翻译的准确度。

评分基准示例：
- 学生答案「极点」，标准答案「杆；极点；电极」→ 1.0 分（核心含义完全对应）
- 学生答案「烟」，标准答案「烟雾」→ 0.7 分（传达主要概念，细节略缺）
- 学生答案「平坦的」，标准答案「平原」→ 0.5 分（相关但偏向形容词，需要指出语义差异）

务必只输出 JSON，不要解释。JSON 格式如下：
{
  "英文词汇": {
    "标准答案": "标准中文翻译",
    "相似度": 0.000,
    "说明": "可选，若无则留空字符串"
  }
}

待评估的词汇与学生答案：
${t.map(o=>{const s=(M.get(o)||"（原文未提供语境）").replace(/\s+/g," ").trim(),l=e[o]&&e[o].trim()?e[o].trim():"(空白)";return`- 英文词汇: ${o}
  原文语境: ${s}
  学生翻译: ${l}`}).join(`
`)}`}function Ie(t,e){console.log("[Parse Response] 开始解析AI回复:",t),console.log("[Parse Response] 需要解析的词汇:",e);try{const n=t.match(/\{[\s\S]*\}/);if(console.log("[Parse Response] JSON匹配结果:",n?n[0]:"null"),!n)throw console.warn("[Parse Response] 未找到JSON格式，使用fallback解析"),new Error("无法解析AI回复格式");const o=JSON.parse(n[0]);console.log("[Parse Response] JSON解析成功:",o);const r={};return e.forEach(s=>{console.log(`[Parse Response] 处理词汇: ${s}`);const l=o[s]||o[s.trim()]||null;if(l&&typeof l=="object"){const a=l.相似度??l.similarity??l.score,d=he(typeof a=="string"?parseFloat(a):a),i=(l.标准答案??l.正确答案??"").toString().trim(),c=(l.说明??l.解释??"").toString().trim();r[s]={similarity:typeof d=="number"?d:null,standardAnswer:i||null,explanation:c||null},console.log(`[Parse Response] ${s} 解析成功 - 相似度:`,r[s].similarity,"标准答案:",r[s].standardAnswer,"说明:",r[s].explanation)}else if(typeof l=="string"){const a=l==="正确";r[s]={similarity:a?1:0,standardAnswer:null,explanation:null},console.log(`[Parse Response] ${s} 使用旧格式字符串 - 相似度模拟:`,r[s].similarity)}else console.log(`[Parse Response] ${s} 未在解析结果中找到，使用fallback`),r[s]={similarity:null,standardAnswer:null,explanation:null}}),console.log("[Parse Response] 最终解析结果:",r),r}catch(n){console.error("[Parse Response] JSON解析失败:",n),console.log("[Parse Response] 使用fallback解析方法");const o={};return e.forEach(r=>{const s=r.toLowerCase(),l=t.toLowerCase();o[r]={similarity:l.includes(s)?.5:null,standardAnswer:null,explanation:null},console.log(`[Parse Response] ${r} fallback结果 - 相似度: ${o[r].similarity}`)}),console.log("[Parse Response] Fallback最终结果:",o),o}}function Bt(t,e,n={}){const{suppressToast:o=!1}=n||{};V=t||{},Gt(V);const r=Object.values(t).map(c=>typeof c.similarity=="number"?c.similarity:null).filter(c=>c!==null),s=r.length?Math.round(r.reduce((c,u)=>c+u,0)/r.length*100)/100:0,l=r.filter(c=>c>=U).length,a=r.filter(c=>c<U&&c>=et).length,d=U.toFixed(2),i=et.toFixed(2);ct.innerHTML=`
    <div>判题完成！</div>
    <div class="score-line">
      <span>平均相似度：<strong>${s.toFixed(2)}</strong></span>
      <span>高匹配(≥${d}): <strong>${l}</strong></span>
      <span>中等匹配(≥${i}): <strong>${a}</strong></span>
      <span>总词数: <strong>${e}</strong></span>
    </div>
  `,Object.entries(t).forEach(([c,u])=>{const g=document.querySelector(`[data-term="${c}"]`)?.closest(".item");if(!g)return;g.classList.remove("correct","incorrect","partial");const f=typeof u.similarity=="number"?u.similarity:null;let b="incorrect";f!==null&&(f>=U?b="correct":f>=et&&(b="partial")),g.classList.add(b);const v=g.querySelector(".term");if(!v)return;let S=v.querySelector(".grade-indicator");S||(S=document.createElement("span"),S.className="grade-indicator",v.appendChild(S)),S.className=`grade-indicator ${b}`,S.textContent=f!==null?f.toFixed(2):"—",S.title="语义相似度 (0-1)";let E=g.querySelector(".grading-details");if(E||(E=document.createElement("div"),E.className="grading-details",g.appendChild(E)),E.innerHTML="",f!==null){const A=document.createElement("div"),$=document.createElement("strong");$.textContent="相似度:",A.appendChild($),A.appendChild(document.createTextNode(" "+f.toFixed(2))),E.appendChild(A)}if(u.standardAnswer){const A=document.createElement("div"),$=document.createElement("strong");$.textContent="标准答案:",A.appendChild($),A.appendChild(document.createTextNode(" "+u.standardAnswer)),E.appendChild(A)}if(u.explanation){const A=document.createElement("div"),$=document.createElement("strong");$.textContent="说明:",A.appendChild($),A.appendChild(document.createTextNode(" "+u.explanation)),E.appendChild(A)}E.hasChildNodes()||E.remove()}),D.style.display="block",k.style.display="none",o||I(`判题完成！平均相似度 ${s.toFixed(2)}`,"ok")}function kt(){V={},document.querySelectorAll(".item").forEach(t=>{t.classList.remove("correct","incorrect","partial");const e=t.querySelector(".grade-indicator");e&&e.remove();const n=t.querySelector(".grading-details");n&&n.remove()})}async function Ae(t,e,n="gpt-3.5-turbo"){console.log("[AI Identity] 开始检测AI身份"),console.log("[AI Identity] API URL:",t),console.log("[AI Identity] 模型:",n),console.log("[AI Identity] API Key 长度:",e?e.length:0);const o={model:n,messages:[{role:"user",content:"你好，请详细介绍一下你自己，包括你的名称、版本、主要功能和特色。"}],temperature:.1,max_tokens:200};console.log("[AI Identity] 请求体:",JSON.stringify(o,null,2));const r=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(o)});if(console.log("[AI Identity] 响应状态:",r.status,r.statusText),!r.ok){const d=await r.text();throw console.error("[AI Identity] API错误响应:",d),new Error(`${r.status} ${r.statusText}: ${d}`)}const s=await r.json();console.log("[AI Identity] API响应:",s);const l=s?.choices?.[0]?.message;if(!l)throw console.error("[AI Identity] 响应格式异常:",s),new Error("API响应格式异常");const a=K(l);if(!a)throw console.error("[AI Identity] 未获得文本回复:",l),new Error("AI未返回文本信息");return console.log("[AI Identity] AI回复:",a),a}async function xe(t){const e=Number(t);if(!Number.isInteger(e)||e<=0){w(`无法识别的历史记录编号：${t}`,"warn");return}const n=X();if(!n){w("请先配置服务器地址再加载历史记录。","warn");return}const o=`${n.replace(/\/$/,"")}/api/sessions/${e}`;w(`正在加载历史记录 #${e}…`,"info");try{const r=await fetch(o,{headers:{Accept:"application/json"}});if(!r.ok){const c=await r.text();throw new Error(`HTTP ${r.status} ${r.statusText}: ${c}`)}const s=await r.json(),l=s?.session||{},a=Array.isArray(s?.results)?s.results:[],d=typeof l.article=="string"?l.article:"";typeof B<"u"&&(B=d),P&&(P.value=d),pt(d||"",[]),Z();const i={};if(a.forEach(c=>{if(!c||typeof c.term!="string")return;const u=c.term.trim();if(!u)return;const g=typeof c.similarity=="number"?c.similarity:Number(c.similarity),f=c.standard_answer||c.standardAnswer||null,b=c.explanation||null;i[u]={similarity:Number.isFinite(g)?g:null,standardAnswer:f,explanation:b},c.context&&M&&M.set(u,c.context)}),Object.keys(i).length?Bt(i,l.total_terms||a.length,{suppressToast:!0}):(kt(),D.style.display="none"),ct){const c=l.submitted_at?new Date(l.submitted_at):null,u=typeof l.avg_similarity=="number"?l.avg_similarity:Number(l.avg_similarity),g=[];c&&!Number.isNaN(c.getTime())&&g.push(`提交时间：${c.toLocaleString()}`),g.push(`总词数：${l.total_terms??a.length}`),Number.isFinite(u)&&g.push(`平均相似度：${u.toFixed(2)}`),g.push(`正确 / 部分正确 / 错误：${l.correct_terms??0} / ${l.partial_terms??0} / ${l.incorrect_terms??0}`),ct.insertAdjacentHTML("beforeend",`<div class="score-line history-note">${g.join(" ｜ ")}</div>`)}D.style.display="block",k.style.display="none",w(`已加载历史记录 #${e}，如需重新练习可直接编辑文章。`,"ok"),document.body.classList.add("replay-mode")}catch(r){console.error("[History Replay] 加载历史记录失败:",r),w(`加载历史记录失败：${r.message}`,"warn"),I("加载历史记录失败："+r.message,"warn")}}const wt=new URLSearchParams(window.location.search).get("session");wt&&xe(wt);
